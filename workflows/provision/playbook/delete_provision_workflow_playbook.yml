---
#the following playbook is used to un-provision, re-provision devices on Cisco Catalyst Center
# The playbook is executed with the following command
# ansible-playbook -i inventory/hosts.yml provision_playbook.yml --extra-vars "VARS_FILES_PATH=../vars/provision_inputs.yml"
- name: Provision devices Cisco Catalyst Center
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no

  vars_files:
    - "{{ VARS_FILE_PATH }}"

  vars:
    state: deleted
    dnac_login: &dnac_login
      dnac_host: "{{ dnac_host }}"
      dnac_username: "{{ dnac_username }}"
      dnac_password: "{{ dnac_password }}"
      dnac_verify: "{{ dnac_verify }}"
      dnac_port: "{{ dnac_port }}"
      dnac_version: "{{ catalyst_center_version  | default(dnac_version) }}"
      dnac_debug: "{{ dnac_debug }}"
      dnac_log: "{{ dnac_log }}"
      dnac_log_level: "{{ dnac_log_level }}"
      dnac_log_file_path: "{{ dnac_log_file_path | default(dnac_log_file_path) }}"
      dnac_log_append: "{{ catalyst_center_log_append | default(dnac_log_append) }}"
  tasks:
    - name: Un-Provision devices on Cisco Catalyst Center
      set_fact:
        long_op_start: "{{ now() }}"
    - name: Un-Provision devices on Cisco Catalyst Center
      cisco.dnac.provision_workflow_manager:
        <<: *dnac_login
        state: merged
        config: "{{provision_details}}"
      register: provision_output
      when: provision_details is defined
    - name: Print the un-Provision devices output
      debug:
        msg: "{{provision_output}}"
    - name: Provision devices playbook end time
      set_fact:
        long_op_end: "{{ now() }}"
    - name: Print Un-Provision devices playbook execution time
      debug:
        msg: "Provision devices playbook run time: {{ long_op_start }}, end: {{ long_op_end }}"
  post_tasks:
    - name: run command module to find python version
      ansible.builtin.command: which python
      register: ansible_play_path
      delegate_to: catalyst_center_hosts
      connection: local
