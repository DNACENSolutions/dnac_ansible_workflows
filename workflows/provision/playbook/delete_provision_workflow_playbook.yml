---
# The following playbook is use to un-provision devices on Cisco Catalyst Center
# The playbook is executed with the following command
# ansible-playbook -i inventory/hosts.yml delete_provision_workflow_playbook.yml --extra-vars "VARS_FILES_PATH=../vars/un_provision_workflow_inputs.yml"
- name: Un_Provision devices Cisco Catalyst Center
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no

  vars_files:
    - "{{ VARS_FILE_PATH }}"

  vars:
    state: deleted
    catalyst_center_login: &catalyst_center_login
      dnac_host: "{{ catalyst_center_host | default(dnac_host) }}"
      dnac_username: "{{ catalyst_center_username | default(dnac_username) }}"
      dnac_password: "{{ catalyst_center_password | default(dnac_password) }}"
      dnac_version: "{{ catalyst_center_version  | default(dnac_version) }}"
      dnac_port: "{{ catalyst_center_port | default(443) }}"
      dnac_verify: "{{ catalyst_center_verify | default(dnac_verify) }}"
      config_verify: "{{ catalyst_center_config_verify | default(False) }}"
      dnac_debug: "{{ catalyst_center_debug | default(False) }}"
      dnac_log: "{{ catalyst_center_log | default(False) }}"
      dnac_log_level: "{{ catalyst_center_log_level | default('INFO') }}"
      dnac_log_file_path: "{{ catalyst_center_log_file_path |  default(omit) }}"
      dnac_log_append: "{{ catalyst_center_log_append |  default(False) }}"
      dnac_api_task_timeout: "{{ catalyst_center_api_task_timeout |  default(1200) }}"
  tasks:
    - name: Un-Provision devices on Cisco Catalyst Center
      set_fact:
        long_op_start: "{{ now() }}"
    - name: Un-Provision devices on Cisco Catalyst Center
      cisco.dnac.provision_workflow_manager:
        <<: *catalyst_center_login
        state: "{{ state }}"
        config: "{{provision_details}}"
      register: unprovision_output
      when: provision_details is defined
    - name: Print the UnProvision devices output
      debug:
        msg: "{{unprovision_output}}"
    - name: UnProvision devices playbook end time
      set_fact:
        long_op_end: "{{ now() }}"
    - name: Print UnProvision devices playbook execution time
      debug:
        msg: "UnProvision devices playbook run time: {{ long_op_start }}, end: {{ long_op_end }}"
  post_tasks:
    - name: run command module to find python version
      ansible.builtin.command: which python
      register: ansible_play_path
      delegate_to: catalyst_center_hosts
      connection: local
