# Parameters
# Parameter	Choices/Defaults	Comments
#   fabric_sites_and_zones:
#     description: A list containing detailed configurations for creating, updating,
#       or deleting fabric sites or zones in a Software-Defined Access (SDA) environment.
#       It also includes specifications for updating the authentication profile template
#       for these sites. Each element in the list represents a specific operation to
#       be performed on the SDA infrastructure, such as the addition, modification,
#       or removal of fabric sites/zones, and modifications to authentication profiles.
#     type: list
#     elements: dict
#     required: true
#     suboptions:
#       fabric_sites:
#         description: A dictionary containing detailed configurations for managing
#           REST Endpoints that will receive Audit log and Events from the Cisco Catalyst
#           Center Platform. This dictionary is essential for specifying attributes
#           and parameters required for the lifecycle management of fabric sites, zones,
#           and associated authentication profiles.
#         type: dict
#         suboptions:
#           site_name_hierarchy:
#             description: This name uniquely identifies the site for operations such
#               as creating, updating, or deleting fabric sites or zones, as well as
#               for updating the authentication profile template. This parameter is
#               mandatory for any fabric site/zone management operation.
#             type: str
#             required: true
#           fabric_type:
#             description: Specifies the type of site to be managed within the SDA environment.
#               The acceptable values are 'fabric_site' and 'fabric_zone'. The default
#               value is 'fabric_site', indicating the configuration of a broader network
#               area, whereas 'fabric_zone' typically refers to a more specific segment
#               within the site.
#             type: str
#             required: true
#           authentication_profile:
#             description: The authentication profile applied to the specified fabric.
#               This profile determines the security posture and controls for network
#               access within the site. Possible values include 'Closed Authentication',
#               'Low Impact', 'No Authentication', and 'Open Authentication'. This setting
#               is critical when creating or updating a fabric site or updating the
#               authentication profile template.
#             type: str
#           is_pub_sub_enabled:
#             description: A boolean flag that indicates whether the pub/sub mechanism
#               is enabled for control nodes in the fabric site. This feature is relevant
#               only when creating or updating fabric sites, not fabric zones. When
#               set to True, pub/sub facilitates more efficient communication and control
#               within the site. The default is True for fabric sites, and this setting
#               is not applicable for fabric zones.
#             type: bool
#           apply_pending_events:
#             description: Modifying an IP address pool used in a fabric causes the
#               fabric to become outdated. An update is required to apply the IP address
#               pool changes to the devices in the fabric site. The reconfiguration
#               time depends on the number of devices. During an upgrade, any pending
#               fabric updates are captured as pending fabric events and applied to
#               the respective site.  By default, this is set to False.
#             type: bool
#           update_authentication_profile:
#             description: A dictionary containing the specific details required to
#               update the authentication profile template associated with the fabric
#               site. This includes advanced settings that fine-tune the authentication
#               process and security controls within the site.
#             type: dict
#             suboptions:
#               authentication_order:
#                 description: Specifies the primary method of authentication for the
#                   site. The available methods are 'dot1x' (IEEE 802.1X) and 'mac'
#                   (MAC-based authentication). This setting determines the order in
#                   which authentication mechanisms are attempted.
#                 type: str
#               dot1x_fallback_timeout:
#                 description: The timeout duration, in seconds, for falling back from
#                   802.1X authentication. This value must be within the range of 3
#                   to 120 seconds. It defines the period a device waits before attempting
#                   an alternative authentication method if 802.1X fails.
#                 type: int
#               wake_on_lan:
#                 description: A boolean value indicating whether the Wake-on-LAN feature
#                   is enabled. Wake-on-LAN allows the network to remotely wake up devices
#                   that are in a low-power state.
#                 type: bool
#               number_of_hosts:
#                 description: Specifies the number of hosts allowed per port. The available
#                   options are 'Single' for one device per port or 'Unlimited' for
#                   multiple devices. This setting helps in controlling the network
#                   access and maintaining security.
#                 type: str
#               enable_bpu_guard:
#                 description: A boolean setting that enables or disables BPDU Guard.
#                   BPDU Guard provides a security mechanism by disabling a port when
#                   a BPDU (Bridge Protocol Data Unit) is received, protecting against
#                   potential network loops. This setting defaults to true and is applicable
#                   only when the authentication profile is set to "Closed Authentication".
#                 type: bool
#               pre_auth_acl:
#                 description: Defines the Pre-Authentication Access Control List (ACL),
#                   which is applicable only when the 'authentication_profile' is set
#                   to "Low Impact." This profile allows limited network access before
#                   authentication, and the ACL controls which traffic is allowed or
#                   blocked during this phase. It is not used with other profiles, as
#                   they typically block all traffic until authentication is complete.
#                 type: dict
#                 suboptions:
#                   enabled:
#                     description: A boolean value indicating whether the Pre-Authentication
#                       ACL is enabled. When set to 'true', the ACL rules are enforced
#                       to control traffic before authentication.
#                     type: bool
#                   implicit_action:
#                     description: Specifies the default action for traffic that does
#                       not match any explicit ACL rules. Common actions include 'PERMIT'
#                       to allow unmatched traffic or 'DENY' to block it.  Implicit
#                       behaviour unless overridden (defaults to "DENY").
#                     type: str
#                     default: "DENY"
#                   description:
#                     description: A brief text description of the Pre-Authentication
#                       ACL, outlining its purpose or providing relevant notes for administrators.
#                     type: str
#                   access_contracts:
#                     description: A list of rules that specify how traffic is handled
#                       based on defined conditions. Each rule determines whether traffic
#                       is permitted or denied based on the contract parameters. If
#                       the 'access_contracts' is not provided or is set to null, the
#                       system will fall back on its default traffic handling settings.
#                       Additionally, up to 3 access control rules can be defined at
#                       a time.
#                     type: list
#                     elements: dict
#                     suboptions:
#                       action:
#                         description: The action to apply when traffic matches the
#                           rule. The allowed actions are 'PERMIT' (allow the traffic)
#                           and 'DENY' (block the traffic).
#                         type: str
#                       protocol:
#                         description: The protocol that defines the type of traffic
#                           to be filtered by the access contract rule. The allowed
#                           protocols are 'UDP', 'TCP', and 'TCP_UDP'. However, 'TCP'
#                           and 'TCP_UDP' are only allowed when the contract port is
#                           set to 'domain'.
#                         type: str
#                       port:
#                         description: Specifies the symbolic port name to which the
#                           ACL rule applies. The allowed values are 'domain' (DNS),
#                           'bootpc' (Bootstrap Protocol Client), and 'bootps' (Bootstrap
#                           Protocol Server). Each port name can only be used once in
#                           the Access Contract list.
#                         type: str
# A boolean value indicating whether the Wake-on-LAN feature is enabled. Wake-on-LAN allows the network to remotely wake up devices that are in a low-power state.
catalyst_center_version: str(required=False)
catalyst_center_verify: bool(required=False)
catalyst_center_api_task_timeout: int(required=False, default=1200)
catalyst_center_debug: bool(required=False, default=False)
catalyst_center_log: bool(required=False, default=False)
catalyst_center_log_append: bool(required=False, default=True)
catalyst_center_log_file_path: str(required=False, default='dnac.log')
catalyst_center_log_level: enum("CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", required=False)
catalyst_center_config_verify: bool(required=False)
jinjatemplate: bool(required=False)
jinjatemplate_file: str(required=False)
passwords_file: str(required=False)
fabric_sites_and_zones: list(include('fabric_sites_and_zones_type'), min=0, max=1000, required=False)
# Schema for the fabric sites and zones details.
---
fabric_sites_and_zones_type: 
  fabric_sites: list( include('fabric_sites_type'), min=0, max=1000, required=False)
fabric_sites_type:
    fabric_type: str(required=False, default='fabric_site')
    site_name_hierarchy: str(required=True)



#===========================
# End of Schema
#===========================