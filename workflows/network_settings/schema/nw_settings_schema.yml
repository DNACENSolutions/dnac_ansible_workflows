
#=========================================================================
# Schema for Network Settings Inputs
# This schema is used to validate the inputs for the Network Settings Workflow
# to run the Validate use the validate tool
# (pyats) pawansi@PAWANSI-M-81A3 dnac_ansible_workflows % ./tools/validate.sh -s workflows/network_settings/schema/nw_settings_schema.yml -d workflows/network_settings/vars/network_settings_vars.yml
# workflows/network_settings/schema/nw_settings_schema.yml
# workflows/network_settings/vars/network_settings_vars.yml
# yamale   -s workflows/network_settings/schema/nw_settings_schema.yml  workflows/network_settings/vars/network_settings_vars.yml
# Validating /Users/pawansi/dnac_ansible_workflows/workflows/network_settings/vars/network_settings_vars.yml...
# Validation success! üëç
#=========================================================================
# Parameter	Choices / Defaults	Comments
# config
# list / elements=dictionary / required
# List of details of global pool, reserved pool, network being managed.

# global_pool_details
# dictionary
# Manages IPv4 and IPv6 IP pools in the global level.

# settings
# dictionary
# Global Pool's settings.

# ip_pool
# list / elements=dictionary
# Contains a list of global IP pool configurations.

# cidr
# string
# Defines the IP pool's Classless Inter-Domain Routing block, enabling systematic IP address distribution within a network.

# dhcp_server_ips
# list / elements=string
# The DHCP server IPs responsible for automatically assigning IP addresses and network configuration parameters to devices on a local network.

# dns_server_ips
# list / elements=string
# Responsible for translating domain names into corresponding IP addresses.

# force_delete
# boolean
# Choices:
# true
# false  ‚Üê
# Forcefully delete all IP pools from the global level of the global pool. The default value is false.

# gateway
# string
# Serves as an entry or exit point for data traffic between networks.

# ip_address_space
# string
# IP address space either IPv4 or IPv6.

# name
# string
# Specifies the name assigned to the Global IP Pool.

# Required for the operations in the Global IP Pool.

# Length should be less than or equal to 100.

# Only letters, numbers and -_./ characters are allowed.

# pool_type
# string
# Choices:
# Generic  ‚Üê
# Tunnel
# Includes both the Generic Ip Pool and Tunnel Ip Pool. Generic - Used for general purpose within the network such as device management or communication between the network devices. Tunnel - Designated for the tunnel interfaces to encapsulate packets within the network protocol. It is used in VPN connections, GRE tunnels, or other types of overlay networks.

# prev_name
# string
# The former identifier for the global pool. It should be used exclusively when you need to update the global pool's name.

# network_management_details
# list / elements=dictionary
# Set default network settings for the site

# settings
# dictionary
# Network management details settings.

# client_and_endpoint_aaa
# dictionary
# Manages AAA (Authentication Authorization Accounting) for clients and endpoints.

# pan_address
# string
# PAN IP address for the ISE server.

# For example, 1.1.1.1.

# primary_server_address
# string
# Primary IP address for the ISE/AAA server.

# For example, 1.1.1.2.

# protocol
# string
# Choices:
# RADIUS  ‚Üê
# TACACS
# Protocol for AAA or ISE server.

# secondary_server_address
# string
# Secondary IP address for the AAA server.

# For example, 1.1.1.3.

# server_type
# string
# Choices:
# AAA
# ISE
# Server type for managing AAA for client and endpoints.

# shared_secret
# string
# Shared secret for ISE Server.

# Length of the shared secret should be atleast 4 characters.

# dhcp_server
# list / elements=string
# DHCP Server IP address (eg 1.1.1.4).

# dns_server
# dictionary
# DNS server details of the network under a specific site.

# domain_name
# string
# Domain Name of DHCP (eg; cisco.com, cisco.net).

# primary_ip_address
# string
# Primary IP Address for DHCP (eg 2.2.2.2).

# secondary_ip_address
# string
# Secondary IP Address for DHCP (eg 3.3.3.3).

# message_of_the_day
# dictionary
# Banner details under a specific site.

# banner_message
# string
# Message for the banner (eg; Good day).

# retain_existing_banner
# boolean
# Choices:
# true
# false
# Retain existing banner message.

# netflow_collector
# dictionary
# NetFlow collector configuration for a specific site.

# collector_type
# string
# Choices:
# Builtin  ‚Üê
# Telemetry_broker_or_UDP_director
# Type of NetFlow collector.

# Supported values include 'Builtin' and 'Telemetry_broker_or_UDP_director'.

# Applicable from Cisco Catalyst Center version 2.3.7.6 onwards.

# enable_on_wired_access_devices
# boolean
# Choices:
# true
# false  ‚Üê
# Enable or disable wired access device. Applicable from Cisco Catalyst Center version 2.3.7.6 onwards..

# ip_address
# string
# IP Address for NetFlow collector. For example, 3.3.3.1.

# port
# integer
# Port number used by the NetFlow collector. For example, 443.

# network_aaa
# dictionary
# Manages AAA (Authentication Authorization Accounting) for network devices.

# pan_address
# string
# PAN IP address for the ISE server.

# For example, 1.1.1.1.

# primary_server_address
# string
# Primary IP address for the ISE/AAA server.

# For example, 1.1.1.2.

# protocol
# string
# Choices:
# RADIUS  ‚Üê
# TACACS
# Protocol for AAA or ISE server.

# secondary_server_address
# string
# Secondary IP address for the AAA server.

# For example, 1.1.1.3.

# server_type
# string
# Choices:
# AAA
# ISE
# Server type for managing AAA for network devices.

# shared_secret
# string
# Shared secret for ISE Server.

# Length of the shared secret should be atleast 4 characters.

# ntp_server
# list / elements=string
# IP address for NTP server under a specific site (eg 1.1.1.2).

# snmp_server
# dictionary
# Snmp Server details under a specific site.

# configure_dnac_ip
# boolean
# Choices:
# true
# false
# Configuration Cisco Catalyst Center IP for SNMP Server (eg true).

# ip_addresses
# list / elements=string
# IP Address for SNMP Server (eg 4.4.4.1).

# syslog_server
# dictionary
# syslog Server details under a specific site.

# configure_dnac_ip
# boolean
# Choices:
# true
# false
# Configuration Cisco Catalyst Center IP for syslog server (eg true).

# ip_addresses
# list / elements=string
# IP Address for syslog server (eg 4.4.4.4).

# timezone
# string
# Time zone of a specific site. (eg Africa/Abidjan/GMT).

# wired_data_collection
# dictionary
# Enables or disables the collection of data from wired network devices for telemetry and monitoring purposes.

# Applicable from Cisco Catalyst Center version 2.3.7.6 onwards.

# enable_wired_data_collection
# boolean
# Choices:
# true
# false  ‚Üê
# Enable or disable wired data collection.

# wireless_telemetry
# dictionary
# Enables or disables the collection of telemetry data from wireless network devices for performance monitoring and analysis.

# Applicable from Cisco Catalyst Center version 2.3.7.6 onwards.

# enable_wireless_telemetry
# boolean
# Choices:
# true
# false  ‚Üê
# Enable or disable wireless telemetry.

# site_name
# string
# The name of the site provided as a path parameter, used to specify where the IP sub-pool will be reserved. (eg Global/Chennai/Trill)

# reserve_pool_details
# dictionary
# Reserved IP subpool details from the global pool.

# force_delete
# boolean
# Choices:
# true
# false  ‚Üê
# Forcefully delete all IP pools from the reserve level of the IP sub-pool. The default value is false.

# ipv4_dhcp_servers
# list / elements=string
# Specifies the IPv4 addresses for DHCP servers, for example, "1.1.1.1".

# ipv4_dns_servers
# list / elements=string
# Specifies the IPv4 addresses for DNS servers, for example, "4.4.4.4".

# ipv4_gateway
# string
# Provides the gateway's IPv4 address, for example, "175.175.0.1".

# ipv4_global_pool
# string
# IP v4 Global pool address with cidr, example 175.175.0.0/16.

# If both 'ipv6_global_pool' and 'ipv4_global_pool_name' are provided, the 'ipv4_global_pool' will be given priority.

# ipv4_global_pool_name
# string
# Specifies the name to be associated with the IPv4 Global IP Pool.

# If both 'ipv4_global_pool' and 'ipv4_global_pool_name' are provided, the 'ipv4_global_pool' will be given priority.

# ipv4_prefix
# boolean
# Choices:
# true
# false
# ip4 prefix length is enabled or ipv4 total Host input is enabled

# ipv4_prefix_length
# integer
# The ipv4 prefix length is required when ipv4_prefix value is true.

# ipv4_subnet
# string
# Indicates the IPv4 subnet address, for example, "175.175.0.0".

# ipv4_total_host
# integer
# The total number of hosts for IPv4, required when the 'ipv4_prefix' is set to false.

# ipv6_address_space
# boolean
# Choices:
# true
# false
# Determines whether both IPv6 and IPv4 inputs are required. If set to false, only IPv4 inputs are required. If set to true, both IPv6 and IPv4 inputs are required.

# ipv6_dhcp_servers
# list / elements=string
# Specifies the IPv6 addresses for DHCP servers in the format. For example, "2001:0db8:0123:4567:89ab:cdef:0001:0001".

# ipv6_dns_servers
# list / elements=string
# Specifies the IPv6 addresses for DNS servers. For example, "2001:0db8:0123:4567:89ab:cdef:0002:0002".

# ipv6_gateway
# string
# Provides the gateway's IPv6 address. For example, "2001:0db8:0123:4567:89ab:cdef:0003:0003".

# ipv6_global_pool
# string
# The ipv6_global_pool is a required when the ipv6_address_space is set to true.

# It specifies the global IPv6 address pool using CIDR notation, such as "2001:db8:85a3::/64".

# In cases where both ipv6_global_pool and ipv6_global_pool_name are specified, ipv6_global_pool will take precedence.

# ipv6_global_pool_name
# string
# Specifies the name assigned to the Ip v6 Global IP Pool.

# If both 'ipv6_global_pool' and 'ipv6_global_pool_name' are provided, the 'ipv6_global_pool' will be given priority.

# ipv6_prefix
# boolean
# Choices:
# true
# false
# Determines whether to enable the 'ipv6_prefix_length' or 'ipv6_total_host' input field. If IPv6 prefix value is true, the IPv6 prefix length input field is required, If it is false ipv6 total Host input is required.

# ipv6_prefix_length
# integer
# Specifies the IPv6 prefix length. Required when 'ipv6_prefix' is set to true.

# ipv6_subnet
# string
# IPv6 Subnet address, example 2001:db8:85a3:0:100.

# ipv6_total_host
# integer
# Specifies the total number of IPv6 hosts. Required when 'ipv6_prefix' is set to false.

# Must specify a number of IPv6 IP addresses that is less than 256.

# name
# string
# Name of the reserve IP subpool.

# Required for the operations in the Reserve IP Pool.

# Length should be less than or equal to 100.

# Only letters, numbers and -_./ characters are allowed.

# pool_type
# string
# Choices:
# Generic  ‚Üê
# LAN
# Management
# Service
# WAN
# Type of the reserve ip sub pool. Generic - Used for general purpose within the network such as device management or communication between the network devices. LAN - Used for the devices and the resources within the Local Area Network such as device connectivity, internal communication, or services. Management - Used for the management purposes such as device management interfaces, management access, or other administrative functions. Service - Used for the network services and application such as DNS (Domain Name System), DHCP (Dynamic Host Configuration Protocol), NTP (Network Time Protocol). WAN - Used for the devices and resources with the Wide Area Network such as remote sites interconnection with other network or services hosted within WAN.

# prev_name
# string
# The former name associated with the reserved IP sub-pool.

# site_name
# string
# The name of the site provided as a path parameter, used to specify where the IP sub-pool will be reserved.

# slaac_support
# boolean
# Choices:
# true
# false
# Allows devices on IPv6 networks to self-configure their IP addresses autonomously, eliminating the need for manual setup.

# config_verify
# boolean
# Choices:
# true
# false  ‚Üê
# Set to True to verify the Cisco Catalyst Center after applying the playbook config.

# dnac_api_task_timeout
# integer
# Default: 1200	
# Defines the timeout in seconds for API calls to retrieve task details. If the task details are not received within this period, the process will end, and a timeout notification will be logged.

# dnac_debug
# boolean
# Choices:
# true
# false  ‚Üê
# Indicates whether debugging is enabled in the Cisco Catalyst Center SDK.

# dnac_host
# string / required
# The hostname of the Cisco Catalyst Center.

# dnac_log
# boolean
# Choices:
# true
# false  ‚Üê
# Flag to enable/disable playbook execution logging.

# When true and dnac_log_file_path is provided, - Create the log file at the execution location with the specified name.

# When true and dnac_log_file_path is not provided, - Create the log file at the execution location with the name 'dnac.log'.

# When false, - Logging is disabled.

# If the log file doesn't exist, - It is created in append or write mode based on the "dnac_log_append" flag.

# If the log file exists, - It is overwritten or appended based on the "dnac_log_append" flag.

# dnac_log_append
# boolean
# Choices:
# true  ‚Üê
# false
# Determines the mode of the file. Set to True for 'append' mode. Set to False for 'write' mode.

# dnac_log_file_path
# string
# Default: dnac.log	
# Governs logging. Logs are recorded if dnac_log is True.

# If path is not specified, - When 'dnac_log_append' is True, 'dnac.log' is generated in the current Ansible directory; logs are appended. - When 'dnac_log_append' is False, 'dnac.log' is generated; logs are overwritten.

# If path is specified, - When 'dnac_log_append' is True, the file opens in append mode. - When 'dnac_log_append' is False, the file opens in write (w) mode. - In shared file scenarios, without append mode, content is overwritten after each module execution. - For a shared log file, set append to False for the 1st module (to overwrite); for subsequent modules, set append to True.

# dnac_log_level
# string
# Default: WARNING	
# Sets the threshold for log level. Messages with a level equal to or higher than this will be logged. Levels are listed in order of severity [CRITICAL, ERROR, WARNING, INFO, DEBUG].

# CRITICAL indicates serious errors halting the program. Displays only CRITICAL messages.

# ERROR indicates problems preventing a function. Displays ERROR and CRITICAL messages.

# WARNING indicates potential future issues. Displays WARNING, ERROR, CRITICAL messages.

# INFO tracks normal operation. Displays INFO, WARNING, ERROR, CRITICAL messages.

# DEBUG provides detailed diagnostic info. Displays all log messages.

# dnac_password
# string
# The password for authentication at the Cisco Catalyst Center.

# dnac_port
# string
# Default: 443	
# Specifies the port number associated with the Cisco Catalyst Center.

# dnac_task_poll_interval
# integer
# Default: 2	
# Specifies the interval in seconds between successive calls to the API to retrieve task details.

# dnac_username
# string
# Default: admin	
# The username for authentication at the Cisco Catalyst Center.

# aliases: user
# dnac_verify
# boolean
# Choices:
# true  ‚Üê
# false
# Flag to enable or disable SSL certificate verification.

# dnac_version
# string
# Default: 2.2.3.3	
# Specifies the version of the Cisco Catalyst Center that the SDK should use.

# state
# string
# Choices:
# merged  ‚Üê
# deleted
# The state of Cisco Catalyst Center after module completion.

# validate_response_schema
# boolean
# Choices:
# true  ‚Üê
# false
# Flag for Cisco Catalyst Center SDK to enable the validation of request bodies against a JSON schema.

network_settings_details: list(include('network_settings_details_type'), min=1, max=1000, required=False)
catalyst_center_version: str(required=False)
catalyst_center_verify: bool(required=False)
catalyst_center_api_task_timeout: int(required=False, default=1200)
catalyst_center_debug: bool(required=False, default=False)
catalyst_center_log: bool(required=False, default=False)
catalyst_center_log_append: bool(required=False, default=True)
catalyst_center_log_file_path: str(required=False, default='dnac.log')
catalyst_center_log_level: enum("CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", required=False)
catalyst_center_task_poll_interval: int(required=False)
catalyst_center_config_verify: bool(required=False, default=False)
---
network_settings_details_type:
  global_pool_details: include('global_pool_details_type', required=False)
  reserve_pool_details: list(include('reserve_pool_details_type'), min=1, max=1000, required=False)
  network_management_details: list(include('network_management_details_type'), min=1, max=500, required=False)

global_pool_details_type:
    settings:
      ip_pool: list(include('ip_pool_details_type'), min=1, max=1000, required=False)

reserve_pool_details_type:
    ipv4_global_pool: str(required=False)
    ipv4_global_pool_name: str(required=False)
    ipv4_dhcp_servers: list(str(), required=False)
    ipv4_dns_servers: list(str(), required=False)
    ipv4_prefix: bool(required=False)
    ipv4_prefix_length: int(required=False)
    ipv4_subnet: str(required=False)
    ipv4_gateway: str(required=False)
    ipv4_total_host: int(required=False)
    name: str(required=False)
    site_name: str(required=False)
    slaac_support: bool(required=False)
    pool_type: enum('Generic', 'LAN', 'Management', 'Service', 'WAN', default='Generic', required=False)
    ipv6_address_space: bool(required=False)
    ipv6_prefix: bool(required=False)
    ipv6_prefix_length: int(required=False)
    ipv6_global_pool: str(required=False)
    ipv6_global_pool_name: str(required=False)
    ipv6_subnet: str(required=False)
    ipv6_gateway: str(required=False)
    ipv6_dhcp_servers: list(str(), required=False)
    ipv6_dns_servers: list(str(), required=False)
    ipv6_total_host: int(required=False)
    prev_name: str(required=False)

ip_pool_details_type:
  name: str(required=False)
  gateway: str(required=False)
  ip_address_space: enum('IPv4', 'IPv6', required=False)
  cidr: str(required=False)
  pool_type: enum('Generic', required=False)
  dhcp_server_ips: list(str(), min=0, max=100, required=False)
  dns_server_ips: list(str(), min=0, max=100, required=False)
  prev_name: str(required=False)

network_management_details_type:
  settings: include('network_management_settings_type')
  site_name: str(required=False)

network_management_settings_type:
  dhcp_server: list(str(), required=False)
  dns_server: include('dns_server_type', required=False)
  client_and_endpoint_aaa: include('client_and_endpoint_aaa_type', required=False)
  message_of_the_day: include('message_of_the_day_type', required=False)
  netflow_collector: include('netflow_collector_type', required=False)
  network_aaa: include('network_aaa_type', required=False)
  ntp_server: list(str(), min=1, max=2, required=False)
  snmp_server: include('snmp_server_type', required=False)
  syslog_server: include('syslog_server_type', required=False)
  timezone: str(required=False)
  wired_data_collection: include('wired_data_collection_type', required=False)
  wireless_telemetry: include('wireless_telemetry_type', required=False)
  
dns_server_type:
  domain_name: str(required=True)
  primary_ip_address: str(required=True)
  secondary_ip_address: str(required=False)

client_and_endpoint_aaa_type:
  shared_secret: str(required=False)
  pan_address: str(required=False)
  primary_server_address: str(required=False)
  secondary_server_address: str(required=False)
  server_type: enum('AAA', 'ISE', required=False)
  protocol: enum('RADIUS', 'TACACS', required=False)


message_of_the_day_type:
  banner_message: str(required=False)
  retain_existing_banner: bool(required=False)

netflow_collector_type:
  ip_address: str(required=False)
  port: int(required=False)
  collector_type: enum('Builtin', 'Telemetry_broker_or_UDP_director', required=False)
  enable_on_wired_access_devices: bool(required=False)
  

network_aaa_type:
  shared_secret: str(required=False)
  pan_address: str(required=False)
  primary_server_address: str(required=False)
  secondary_server_address: str(required=False)
  server_type: enum('AAA', 'ISE', required=False)
  protocol: enum('RADIUS', 'TACACS', default='RADIUS', required=False)

snmp_server_type:
  configure_dnac_ip: bool(required=False)
  ip_addresses: list(str(), required=False)

syslog_server_type:
  configure_dnac_ip: bool(required=False)
  ip_addresses: list(str(), min=1, max=100, required=False)

wired_data_collection_type:
  enable_wired_data_collection: bool(required=False)

wireless_telemetry_type:
  enable_wireless_telemetry: bool(required=False)

