# application_policy_details:
#     description: A list of dictionaries containing application queuing profile details.
#     type: list
#     elements: dict
#     required: true
#     suboptions:
#       queuing_profile:
#         description: Defines queuing profile settings for applications.
#         type: list
#         elements: dict
#         suboptions:
#           profile_name:
#             description:
#               - Name of the queuing profile.
#               - Required for create, update, and delete operations.
#             type: str
#           new_profile_name:
#             description: New name for the queuing profile (used for updates).
#             type: str
#           profile_description:
#             description: Description of the queuing profile.
#             type: str
#           bandwidth_settings:
#             description: Specifies bandwidth allocation details.
#             type: dict
#             suboptions:
#               is_common_between_all_interface_speeds:
#                 description: Indicates whether bandwidth settings apply uniformly across all interface speeds.
#                 type: bool
#               interface_speed_bandwidth_clauses:
#                 description: Defines bandwidth allocation for different types of network traffic based on interface speed.
#                 type: list
#                 elements: dict
#                 suboptions:
#                   interface_speed:
#                     description: |
#                       - Specifies the data transfer rate of a network interface.
#                       - Permissible values:
#                         - "ALL": Applies to all interface speeds.
#                         - "HUNDRED_GBPS": 100 Gbps.
#                         - "TEN_GBPS": 10 Gbps.
#                         - "ONE_GBPS": 1 Gbps.
#                         - "HUNDRED_MBPS": 100 Mbps.
#                         - "TEN_MBPS": 10 Mbps.
#                         - "ONE_MBPS": 1 Mbps.
#                     type: str
#                   bandwidth_percentages:
#                     description: Specifies the percentage of bandwidth allocated to different traffic categories.
#                     type: dict
#                     suboptions:
#                       transactional_data:
#                         description: Bandwidth allocated to transactional data traffic.
#                         type: str
#                       best_effort:
#                         description: Bandwidth for non-priority, general-purpose traffic.
#                         type: str
#                       voip_telephony:
#                         description: Bandwidth for voice and video calls over IP.
#                         type: str
#                       multimedia_streaming:
#                         description: Bandwidth for real-time audio and video streaming.
#                         type: str
#                       real_time_interactive:
#                         description: Bandwidth for low-latency applications requiring immediate response.
#                         type: str
#                       multimedia_conferencing:
#                         description: Bandwidth for combined audio-video conferencing traffic.
#                         type: str
#                       signaling:
#                         description: Bandwidth for network control messages managing communication sessions.
#                         type: str
#                       scavenger:
#                         description: Bandwidth for low-priority traffic that can be delayed or dropped.
#                         type: str
#                       ops_admin_mgmt:
#                         description: Bandwidth for operations and administration management traffic.
#                         type: str
#                       broadcast_video:
#                         description: Bandwidth for one-to-many video distribution.
#                         type: str
#                       network_control:
#                         description: Bandwidth for traffic related to network management and operation.
#                         type: str
#                       bulk_data:
#                         description: Bandwidth for large-volume, non-time-sensitive data transfers.
#                         type: str
#           dscp_settings:
#             description: Specifies the DSCP (Differentiated Services Code Point) values assigned to different traffic categories.
#             type: list
#             elements: dict
#             suboptions:
#               transactional_data:
#                 description: DSCP value for transactional data traffic, involving data exchanges between systems.
#                 type: str
#               best_effort:
#                 description: DSCP value for best-effort traffic, which does not require specific quality or priority guarantees.
#                 type: str
#               voip_telephony:
#                 description: DSCP value for voice and video calls transmitted over IP networks.
#                 type: str
#               multimedia_streaming:
#                 description: DSCP value for real-time audio and video streaming traffic.
#                 type: str
#               real_time_interactive:
#                 description: DSCP value for interactive applications requiring low latency and immediate responsiveness.
#                 type: str
#               multimedia_conferencing:
#                 description: DSCP value for multimedia conferencing traffic, including both audio and video communication.
#                 type: str
#               signaling:
#                 description: DSCP value for signaling traffic used to establish, manage, and terminate communication sessions.
#                 type: str
#               scavenger:
#                 description: DSCP value for low-priority traffic that can be delayed or dropped in case of congestion.
#                 type: str
#               ops_admin_mgmt:
#                 description: DSCP value for operations, administration, and management traffic.
#                 type: str
#               broadcast_video:
#                 description: DSCP value for broadcast video traffic, typically distributed in a one-to-many model.
#                 type: str
#               network_control:
#                 description: DSCP value for network control traffic related to management and operation.
#                 type: str
#               bulk_data:
#                 description: DSCP value for large-volume data transfers that can tolerate delays or interruptions.
#                 type: str
#       application_sets:
#         description:
#           - Defines a logical grouping of network applications that share common policies and configuration settings.
#           - Application sets enable network administrators to manage and apply policies to multiple applications simultaneously,
#             streamlining policy enforcement, monitoring, and optimization.
#         type: list
#         elements: dict
#         suboptions:
#           name:
#             description:
#               - Specifies the name of the application set.
#               - Required for deleting an application set.
#             type: str
#       application:
#         description:
#           - Defines individual applications within an application set that share a common purpose or function.
#           - Grouping similar applications into sets allows administrators to apply uniform policies efficiently.
#         type: list
#         elements: dict
#         suboptions:
#           name:
#             description:
#               - Specifies the name of the application.
#               - Required for create, update, and delete operations.
#             type: str
#           description:
#             description: A brief description of the application.
#             type: str
#           help_string:
#             description: Provides the purpose or intended use of the application.
#             type: str
#           type:
#             description: |
#               - Specifies how the application is identified within the network.
#               - Permissible values:
#                 - server_name: Custom application identified by server name.
#                 - url: Custom application identified by URL.
#                 - server_ip: Custom application identified by server IP address.
#             type: str
#           server_name:
#             description: Required if `type` is `server_name`; specifies the server name for application identification.
#             type: str
#           dscp:
#             description:
#               - Required if `type` is `server_ip`; specifies DSCP value or `network_identity` details for the application.
#               - DSCP value must be in the range 0 - 63.
#             type: str
#           network_identity:
#             description: Required if `type` is `server_ip`; defines network-related parameters for application identification.
#             type: list
#             elements: dict
#             suboptions:
#               protocol:
#                 description: Specifies the network protocol used by the application.
#                 type: str
#               port:
#                 description: Specifies the communication port number for the application.
#                 type: str
#               ip_subnet:
#                 description: List of IP addresses or subnets associated with the application.
#                 type: list
#                 elements: str
#               lower_port:
#                 description: Specifies the lower range of ports for network communication.
#                 type: str
#               upper_port:
#                 description: Specifies the upper range of ports for network communication.
#                 type: str
#           app_protocol:
#             description: |
#               - Required if `type` is `url` or `server_ip`; specifies the protocol used by the application.
#               - If `type` is `url`, `app_protocol` must be `TCP`.
#               - Permissible values:
#                 - 'TCP': Transmission Control Protocol (reliable, connection-oriented).
#                 - 'UDP': User Datagram Protocol (fast, connectionless, no guaranteed delivery).
#                 - 'TCP_UDP': Supports both TCP and UDP communication.
#                 - 'IP': Internet Protocol for network addressing and routing.
#             type: str
#           url:
#             description: Required if `type` is `url`; specifies the URL for application identification.
#             type: str
#           traffic_class:
#             description: |
#               - Defines traffic prioritization based on network policies, ensuring critical applications receive the required bandwidth.
#               - Permissible values:
#                   - "BROADCAST_VIDEO": Video traffic broadcasted to multiple recipients.
#                   - "BULK_DATA": Large data transfers like file uploads or backups.
#                   - "MULTIMEDIA_CONFERENCING": Audio and video traffic for conferencing.
#                   - "MULTIMEDIA_STREAMING": Streaming video or audio content.
#                   - "NETWORK_CONTROL": Traffic for managing and controlling network infrastructure.
#                   - "OPS_ADMIN_MGMT": Traffic for network operational and administrative tasks.
#                   - "REAL_TIME_INTERACTIVE": Low-latency traffic for real-time interactive applications.
#                   - "SIGNALING": Control traffic for setting up and managing sessions (e.g., VoIP).
#                   - "TRANSACTIONAL_DATA": Data related to transactions, like financial or retail operations.
#                   - "VOIP_TELEPHONY": Voice traffic over IP networks.
#                   - "BEST_EFFORT": Non-critical traffic delivered on a best-effort basis.
#                   - "SCAVENGER": Low-priority traffic, often background tasks.
#             type: str
#           ignore_conflict:
#             description: Flag to indicate whether to ignore conflicts during configuration.
#             type: str
#           rank:
#             description: Specifies the priority ranking of the application.
#             type: str
#           engine_id:
#             description: Identifier for the engine managing the application.
#             type: str
#           application_set_name:
#             description: Specifies the application set under which this application is created.
#             type: str
#       application_policy:
#         description: Defines how an application's traffic is managed and prioritized within a network.
#         type: list
#         elements: dict
#         suboptions:
#           name:
#             description: Name of the application policy
#             type: str
#           application_set_name:
#             description:
#               - The application sets to be removed from the application policy.
#               - Only the specified sets will be removed.
#               - Applicable only when the policy is in the deleted state.
#             type: str
#           policy_details:
#             description: |
#               - Represents the current status of the application policy.
#               - Helps track whether the policy is active, deleted, or restored.
#               - Permissible values:
#                   - "NONE": The policy is active and in its original, operational state.
#                   - "DELETED": The policy has been removed and is no longer active.
#                   - "RESTORED": The policy has been reactivated after being deleted.
#             type: str
#           site_names:
#             description: The site or area within the network where the policy should be enforced.
#             type: list
#             elements: str
#           device_type:
#             description: Indicates whether the device is wired or wireless.
#             type: list
#             elements: dict
#             suboptions:
#               device_ip:
#                 description:
#                   - Required if the device type is wireless.
#                   - The IP address assigned to the device for network communication.
#                 type: str
#               wlan_id:
#                 description:
#                   - Required if the device type is wireless.
#                   - The WLAN ID associated with the device for traffic segmentation.
#                 type: str
#           application_queuing_profile_name:
#             description: Defines rules for traffic management by prioritizing network traffic within the application policy.
#             type: str
#           clause:
#             description: Defines specific rules or conditions under which an application set is added to the application policy.
#             type: list
#             elements: dict
#             suboptions:
#               clause_type:
#                 description: |
#                   - Specifies the type of clause for the application policy.
#                   - Permissible values:
#                     - "BUSINESS_RELEVANCE": Defines the importance of the application to business operations, affecting its priority and
#                     handling in the network policy.
#                     - "APPLICATION_POLICY_KNOBS": Configurable settings that manage the application's network behavior,
#                     such as traffic prioritization and resource allocation.
#                 type: str
#               relevance_details:
#                 description: Details about how relevant the application is to business operations.
#                 type: list
#                 elements: dict
#                 suboptions:
#                   relevance:
#                     description: |
#                       - Specifies whether the application set is relevant to the application policy.
#                       - Permissible values:
#                         - "BUSINESS_RELEVANT": The application is critical for business functions.
#                         - "BUSINESS_IRRELEVANT": The application is not essential for business operations.
#                         - "DEFAULT": A default setting when no specific relevance is assigned.
#                     type: str
#                   application_set_name:
#                     description: Include all the application sets for which the application policy has to be created
#                     type: str
# Yamale Schema for Application Policy

catalyst_center_version: str(required=False)
catalyst_center_verify: bool(required=False)
catalyst_center_api_task_timeout: int(required=False, default=1200)
catalyst_center_debug: bool(required=False, default=False)
catalyst_center_log: bool(required=False, default=False)
catalyst_center_log_append: bool(required=False, default=True)
catalyst_center_log_file_path: str(required=False, default='dnac.log')
catalyst_center_log_level: enum("CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", required=False)
catalyst_center_config_verify: bool(required=False)
application_policy_details: list(include('application_policy_details_type'), required=True, min=0, max=500)

---
application_policy_details_type:
  queuing_profile: list(include('queuing_profile_type'), required=False)
  application_sets: list(include('application_sets_type'), required=False)
  application: list(include('application_type'), required=False)
  application_policy: list(include('application_policy_type'), required=False)

queuing_profile_type:
  profile_name: str(required=True)
  new_profile_name: str(required=False)
  profile_description: str(required=False)
  bandwidth_settings: include('bandwidth_settings_type', required=False)
  dscp_settings: list(include('dscp_settings_type'), required=False)

bandwidth_settings_type:
  is_common_between_all_interface_speeds: bool(required=False)
  interface_speed_bandwidth_clauses: list(include('interface_speed_bandwidth_clauses_type'), required=False)

interface_speed_bandwidth_clauses_type:
  interface_speed: enum("ALL", "HUNDRED_GBPS", "TEN_GBPS", "ONE_GBPS", "HUNDRED_MBPS", "TEN_MBPS", "ONE_MBPS", required=False)
  bandwidth_percentages: include('bandwidth_percentages_type', required=False)

bandwidth_percentages_type:
  transactional_data: str(required=False)
  best_effort: str(required=False)
  voip_telephony: str(required=False)
  multimedia_streaming: str(required=False)
  real_time_interactive: str(required=False)
  multimedia_conferencing: str(required=False)
  signaling: str(required=False)
  scavenger: str(required=False)
  ops_admin_mgmt: str(required=False)
  broadcast_video: str(required=False)
  network_control: str(required=False)
  bulk_data: str(required=False)

dscp_settings_type:
  transactional_data: str(required=False)
  best_effort: str(required=False)
  voip_telephony: str(required=False)
  multimedia_streaming: str(required=False)
  real_time_interactive: str(required=False)
  multimedia_conferencing: str(required=False)
  signaling: str(required=False)
  scavenger: str(required=False)
  ops_admin_mgmt: str(required=False)
  broadcast_video: str(required=False)
  network_control: str(required=False)
  bulk_data: str(required=False)

application_sets_type:
  name: str(required=True)

application_type:
  name: str(required=True)
  description: str(required=False)
  help_string: str(required=False)
  type: enum("server_name", "url", "server_ip", required=False)
  server_name: str(required=False)
  dscp: str(required=False)
  network_identity: list(include('network_identity_type'), required=False)
  app_protocol: enum("TCP", "UDP", "TCP_UDP", "IP", required=False)
  url: str(required=False)
  traffic_class: enum("BROADCAST_VIDEO", "BULK_DATA", "MULTIMEDIA_CONFERENCING", "MULTIMEDIA_STREAMING", "NETWORK_CONTROL", "OPS_ADMIN_MGMT", "REAL_TIME_INTERACTIVE", "SIGNALING", "TRANSACTIONAL_DATA", "VOIP_TELEPHONY", "BEST_EFFORT", "SCAVENGER", required=False)
  ignore_conflict: str(required=False)
  rank: str(required=False)
  engine_id: str(required=False)
  application_set_name: str(required=False)

network_identity_type:
  protocol: str(required=False)
  port: str(required=False)
  ip_subnet: list(str(), required=False)
  lower_port: str(required=False)
  upper_port: str(required=False)

application_policy_type:
  name: str(required=True)
  application_set_name: str(required=False)
  policy_details: enum("NONE", "DELETED", "RESTORED", required=False)
  site_names: list(str(), required=False)
  device_type: str(required=True)
  device: include('device_type_type', required=False)
  application_queuing_profile_name: str(required=False)
  clause: list(include('clause_details_type'), required=False)
  
device_type_type:
  device_ip: str(required=False)
  wlan_id: str(required=False)



clause_details_type:
  clause_type: enum("BUSINESS_RELEVANCE", "APPLICATION_POLICY_KNOBS", required=False)
  relevance_details: list(include('relevance_details_type'), required=False)

relevance_details_type:
  relevance: enum("BUSINESS_RELEVANT", "BUSINESS_IRRELEVANT", "DEFAULT", required=False)
  application_set_name: str(required=False)
