---
- name: Playbook to manage device credentials in Catalyst Center.
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no

  vars_files:
    - "{{ VARS_FILE_PATH }}"
  vars:
    state: deleted
    catalyst_center_login: &catalyst_center_login
      dnac_host: "{{ catalyst_center_host | default(dnac_host) }}"
      dnac_username: "{{ catalyst_center_username | default(dnac_username) }}"
      dnac_password: "{{ catalyst_center_password | default(dnac_password) }}"
      dnac_version: "{{ catalyst_center_version  | default(dnac_version) }}"
      dnac_port: "{{ catalyst_center_port | default(443) }}"
      dnac_verify: "{{ catalyst_center_verify | default(dnac_verify) }}"
      config_verify: "{{ catalyst_center_config_verify | default(False) }}"
      dnac_debug: "{{ catalyst_center_debug | default(False) }}"
      dnac_log: "{{ catalyst_center_log | default(False) }}"
      dnac_log_level: "{{ catalyst_center_log_level | default('INFO') }}"
      dnac_log_file_path: "{{ catalyst_center_log_file_path |  default(omit) }}"
      dnac_log_append: "{{ catalyst_center_log_append |  default(False) }}"
      dnac_api_task_timeout: "{{ catalyst_center_api_task_timeout |  default(1200) }}"

  tasks:
    # Assign Credentials to sites if defined in "{{ VARS_FILE_PATH }}"
    - name: Assign Credentials to sites for credentials and sites maps in variables file "{{ VARS_FILE_PATH }}"
      cisco.dnac.device_credential_workflow_manager:
        <<: *catalyst_center_login
        state: "{{ state }}"
        config:
        - "{{ item }}"
      with_list: "{{ device_credentials.credentials_site_assignment }}"
      when: device_credentials.credentials_site_assignment is defined
      
    # Create or Update existing Credentials with provided details in "{{ VARS_FILE_PATH }}"
    - name: Create or Update existing Credentials with provided details in "{{ VARS_FILE_PATH }}"
      cisco.dnac.device_credential_workflow_manager:
        <<: *catalyst_center_login
        state: "{{ state }}"
        config:
        - "{{ item }}"
      loop: "{{ device_credentials.credentials_details }}"
      when: device_credentials.credentials_details is defined

