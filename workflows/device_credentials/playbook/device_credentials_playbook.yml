---
- name: Playbook to manage device credentials in Catalyst Center and assignment of credentials onsites and apply
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no
  vars_files:
    - "{{ VARS_FILE_PATH }}"
  vars:
    state: merged
    dnac_login: &dnac_login
      dnac_host: "{{ dnac_host }}"
      dnac_username: "{{ dnac_username }}"
      dnac_password: "{{ dnac_password }}"
      dnac_verify: "{{ catalyst_center_verify  | default(dnac_verify) }}"
      dnac_port: "{{ dnac_port }}"
      dnac_version: "{{ catalyst_center_version  | default(dnac_version) }}"
      dnac_debug: "{{ dnac_debug }}"
      dnac_log: "{{ dnac_log }}"
      dnac_log_level: "{{ dnac_log_level }}"
      
  tasks:
    # Include the variables file {{ VARS_FILE_PATH }} for the playbook
    - name: Device Credentials Playbook start time
      set_fact:
        long_op_start: "{{ now() }}"

    - name: set the password file path
      set_fact:
        passwords_file: "{{ passwords_file  | default('../../../ansible_vault_encrypted_inputs/mypasswordfile.yaml') }}"
      when: jinjatemplate is defined and jinjatemplate is true 

    - name: load password file
      include_vars:
        file: "{{ passwords_file }}"
      when: jinjatemplate is defined and jinjatemplate is true and passwords_file is defined

    # load site template jinja file
    - name: Create Template
      template: 
        src: "{{ jinjatemplate_file }}"
        dest: ../tmp/template_generated_file.yaml
      when:  jinjatemplate is defined and jinjatemplate is true and jinjatemplate_file is defined
    # Include the variables file ../tmp/template_generated_file.yaml for the playbook
    - name: Include the variables file ../tmp/template_generated_file.yaml for the playbook
      include_vars:
        file: ../tmp/template_generated_file.yaml
      when: jinjatemplate is defined

    # Create or Update existing Credentials with provided details in "{{ VARS_FILES_PATH }}"
    - name: Create or Update existing Credentials with provided details in "{{ VARS_FILE_PATH }}"
      cisco.dnac.device_credential_workflow_manager:
        <<: *dnac_login
        state: "{{ state }}"
        config: "{{ device_credentials.credentials_details }}" 
      when: device_credentials.credentials_details is defined and device_credentials.credentials_details | length > 0

    # Assign Credentials to sites if defined in "{{ VARS_FILES_PATH }}"
    - name: Assign Credentials to sites for credentials and sites maps in variables file "{{ VARS_FILE_PATH }}"
      cisco.dnac.device_credential_workflow_manager:
        <<: *dnac_login
        state: "{{ state }}"
        config: "{{ device_credentials.credentials_site_assignment }}" 
      when: device_credentials.credentials_site_assignment is defined and device_credentials.credentials_site_assignment | length > 0
    
    - name: delete the tmp files
      ansible.builtin.command: rm ../tmp/template_generated_file.yaml
      when : jinjatemplate is defined and jinjatemplate is true and jinjatemplate_file is defined

    - name: Device Credentials Playbook end time
      set_fact:
        long_op_end: "{{ now() }}"
    - name: Print Device Credentials Playbook execution time
      debug:
        msg: "Device Credentials Playbook run time: {{ long_op_start }}, end: {{ long_op_end }}"
  # run command module to find python version
  post_tasks:
    - name: run command module to find python version
      ansible.builtin.command: which python
      register: ansible_play_path
      delegate_to: catalyst_center_hosts
      connection: local