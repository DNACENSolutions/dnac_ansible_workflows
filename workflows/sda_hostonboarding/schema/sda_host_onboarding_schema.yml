# The Cisco Catalyst Center schema for the SD-Access Host Onboarding playbook.
# Parameters
# Parameter	Choices/Defaults	Comments
# config
# list / elements =dictionary / required
# A list containing detailed configurations for Adding/Updating/Deleting port assignment(s) or port channel(s) of Network Devices in SD-Access Fabric roles in Cisco Catalyst Center.

# hostname
# string
# Hostname of the target device in the SD-Access Fabric on which access device ports need to be configured.

# Either the hostname or IP address of the network device must be provided for performing port assignment or port channel operations.

# The specified hostname must be identical to the hostname displayed in the inventory section of Cisco Catalyst Center.

# For example - "DC-T-9300.cisco.local"

# Note - If only the "ip_address" or "hostname" is provided in the "deleted" state, all port assignment(s) and port channel(s) configured for the specified fabric device will be deleted.

# ip_address
# string
# IP address of the target device in the SD-Access Fabric on which access device ports need to be configured.

# Either the hostname or IP address of the network device must be provided for performing port assignment or port channel operations.

# The specified IP address must match the management IP displayed in the inventory section of Cisco Catalyst Center.

# For example - "204.1.2.2"

# Note - If only the "ip_address" or "hostname" is provided in the "deleted" state, all port assignment(s) and port channel(s) configured for the specified fabric device will be deleted.

# port_assignment_details
# list / elements =dictionary
# A list containing configuration details for adding, updating, or deleting port assignment(s) in Cisco Catalyst Center.

# The "interface_name" and "connected_device_type" fields are required for add and update port assignment(s) operations.

# For the update port channel(s) operation, the parameters that can be updated include "data_vlan_name", "voice_vlan_name", "authentication_template_name" and "interface_description".

# For delete port assignment(s) operation, the valid parameters are "interface_name," "data_vlan_name," and "voice_vlan_name". If all three parameters are provided, only port assignments that match all specified criteria are deleted (i.e., AND filtering is applied).

# authentication_template_name
# string / required
# Choices:
# No Authentication
# Open Authentication
# Closed Authentication
# Low Impact
# Specifies the authentication template applied to the port during the port assignment operation.

# The available options are "No Authentication", "Open Authentication", "Closed Authentication", and "Low Impact".

# The default "authentication_template_name" for all device types is "No Authentication".

# For Connected Device Type "TRUNKING_DEVICE", the "authentication_template_name" must be set to "No Authentication".

# Security/scalable groups are only supported with the "No Authentication" profile.

# connected_device_type
# string
# Choices:
# TRUNKING_DEVICE
# ACCESS_POINT
# USER_DEVICE
# Specifies the type of access device that needs to be onboarded on the specified interface.

# Valid options for Connected Device Types are - "USER_DEVICE", "ACCESS_POINT", and "TRUNKING_DEVICE".

# TRUNKING_DEVICE - Configures the interface as a trunk port. No additional parameters are required for this Connected Device Type. If the "authentication_template_name" is provided, it must be set to 'No Authentication' when configuring a "TRUNKING_DEVICE".

# ACCESS_POINT - Configures the port for connecting an access point. The "data_vlan_name" parameter is required when configuring "ACCESS_POINT" devices in port assignments. Optionally, the "authentication_template_name" and "interface_description" can also be specified.

# USER_DEVICE - Configures the port to connect to a host device, such as an IP phone, computer, or laptop. At least one VLAN ("data_vlan_name" or "voice_vlan_name") is required when configuring a "USER_DEVICE". Optional parameters include "security_group_name", "authentication_template_name", and "interface_description".

# Note - The "connected_device_type" cannot be updated from "TRUNK" to "EXTENDED_NODE" unless the protocol configured is PAGP.

# data_vlan_name
# string
# Specifies the Data VLAN name or IP address pool to be assigned to the port.

# This parameter is required when the connected_device_type is set to ACCESS_POINT.

# At least one VLAN ("data_vlan_name" or "voice_vlan_name") is required when configuring a "USER_DEVICE".

# interface_description
# string
# A description of the port assignment interface.

# interface_name
# string
# Specifies the name of the port or interface on the fabric device where port assignment operations need to be performed.

# This parameter is required for adding or updating port assignments.

# For example - "GigabitEthernet2/1/1"

# security_group_name
# string
# Specifies the security or scalable group name for the port assignment.

# Security/scalable groups are only supported with the "No Authentication" profile.

# voice_vlan_name
# string
# Specifies the Voice VLAN name or IP address pool to be assigned to the port.

# At least one VLAN ("data_vlan_name" or "voice_vlan_name") is required when configuring a "USER_DEVICE".

# port_channel_details
# list / elements =dictionary
# A list containing configuration details for adding, updating, or deleting port channel(s) between a fabric edge and its remotely connected devices in Cisco Catalyst Center.

# The "interface_names" and "connected_device_type" fields are required for add and update port channel(s) operations.

# For the update port channel(s) operation, the parameters that can be updated include "connected_device_type" and "port_channel_description".

# For delete port channel(s) operation, the valid parameters are "port_channel_name" and "connected_device_type". If both parameters are provided, only port channels that match the specified criteria are deleted (i.e., AND filtering is applied).

# connected_device_type
# string
# Choices:
# TRUNK
# EXTENDED_NODE
# Specifies the type of device connected to the port channel. Valid options are "TRUNK" or "EXTENDED_NODE".

# To create a port channel between a fabric edge node and an extended node, or between two extended nodes, select "EXTENDED_NODE".

# To create a port channel with a fabric edge node or extended node on one side, and a third-party device or server port on the other side, choose "TRUNK".

# interface_names
# list / elements =string
# A list of ports/interfaces of the target device in the SD-Access Fabric on which port channel needs to be configured.

# A maximum of 8 ports are supported in interface_names for "PAGP" and "ON" protocols.

# A maximum of 16 ports are supported in interface_names for the "LACP" protocol.

# Example - ["TwoGigabitEthernet2/0/1", "TwoGigabitEthernet2/0/2", "TwoGigabitEthernet2/0/3"]

# port_channel_description
# string
# A description of the port channel.

# port_channel_name
# string
# Specifies the name of an existing port channel in the SD-Access Fabric that needs to be deleted.

# This parameter is applicable only for delete port channel operations.

# protocol
# string
# Choices:
# ON
# LACP
# PAGP
# Specifies the appropriate protocol for the specific Connected Device Type to be configured on the port channel.

# Valid options are "ON", "LACP", and "PAGP".

# By default, the protocol is "ON" for "connected_device_type" - "EXTENDED_NODE".

# By default, the protocol is "LACP" for "connected_device_type" - "TRUNK".

# Protocol field cannot be updated after the initial configuration.

# The "connected_device_type" cannot be updated from "TRUNK" to "EXTENDED_NODE" unless the protocol configured is PAGP.

# config_verify
# boolean
# Choices:
# true
# false  ←
# Set to True to verify the Cisco Catalyst Center configuration after applying the playbook configuration.

# dnac_api_task_timeout
# integer
# Default:1200	
# Defines the timeout in seconds for API calls to retrieve task details. If the task details are not received within this period, the process will end, and a timeout notification will be logged.

# dnac_debug
# boolean
# Choices:
# true
# false  ←
# Indicates whether debugging is enabled in the Cisco Catalyst Center SDK.

# dnac_host
# string / required
# The hostname of the Cisco Catalyst Center.

# dnac_log
# boolean
# Choices:
# true
# false  ←
# Flag to enable/disable playbook execution logging.

# When true and dnac_log_file_path is provided, - Create the log file at the execution location with the specified name.

# When true and dnac_log_file_path is not provided, - Create the log file at the execution location with the name 'dnac.log'.

# When false, - Logging is disabled.

# If the log file doesn't exist, - It is created in append or write mode based on the "dnac_log_append" flag.

# If the log file exists, - It is overwritten or appended based on the "dnac_log_append" flag.

# dnac_log_append
# boolean
# Choices:
# true  ←
# false
# Determines the mode of the file. Set to True for 'append' mode. Set to False for 'write' mode.

# dnac_log_file_path
# string
# Default:dnac.log	
# Governs logging. Logs are recorded if dnac_log is True.

# If path is not specified, - When 'dnac_log_append' is True, 'dnac.log' is generated in the current Ansible directory; logs are appended. - When 'dnac_log_append' is False, 'dnac.log' is generated; logs are overwritten.

# If path is specified, - When 'dnac_log_append' is True, the file opens in append mode. - When 'dnac_log_append' is False, the file opens in write (w) mode. - In shared file scenarios, without append mode, content is overwritten after each module execution. - For a shared log file, set append to False for the 1st module (to overwrite); for subsequent modules, set append to True.

# dnac_log_level
# string
# Default:WARNING	
# Sets the threshold for log level. Messages with a level equal to or higher than this will be logged. Levels are listed in order of severity [CRITICAL, ERROR, WARNING, INFO, DEBUG].

# CRITICAL indicates serious errors halting the program. Displays only CRITICAL messages.

# ERROR indicates problems preventing a function. Displays ERROR and CRITICAL messages.

# WARNING indicates potential future issues. Displays WARNING, ERROR, CRITICAL messages.

# INFO tracks normal operation. Displays INFO, WARNING, ERROR, CRITICAL messages.

# DEBUG provides detailed diagnostic info. Displays all log messages.

# dnac_password
# string
# The password for authentication at the Cisco Catalyst Center.

# dnac_port
# string
# Default:443	
# Specifies the port number associated with the Cisco Catalyst Center.

# dnac_task_poll_interval
# integer
# Default:2	
# Specifies the interval in seconds between successive calls to the API to retrieve task details.

# dnac_username
# string
# Default:admin	
# The username for authentication at the Cisco Catalyst Center.

# aliases: user
# dnac_verify
# boolean
# Choices:
# true  ←
# false
# Flag to enable or disable SSL certificate verification.

# dnac_version
# string
# Default:2.2.3.3	
# Specifies the version of the Cisco Catalyst Center that the SDK should use.

# state
# string
# Choices:
# merged  ←
# deleted
# The desired state of Cisco Catalyst Center after the module execution.

# validate_response_schema
# boolean
# Choices:
# true  ←
# false
# Flag for Cisco Catalyst Center SDK to enable the validation of request bodies against a JSON schema.
# For host related parameters the values can come from host inventory.
catalyst_center_version: str(required=False)
catalyst_center_verify: bool(required=False)
catalyst_center_api_task_timeout: int(required=False, default=1200)
catalyst_center_debug: bool(required=False, default=False)
catalyst_center_log: bool(required=False, default=False)
catalyst_center_log_append: bool(required=False, default=True)
catalyst_center_log_file_path: str(required=False, default='dnac.log')
catalyst_center_log_level: enum("CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", required=False)
catalyst_center_config_verify: bool(required=False)
catalyst_center_task_timeout: int(required=False)
catalyst_center_task_poll_interval: int(required=False, default=2)
jinjatemplate: bool(required=False)
jinjatemplate_file: str(required=False)
sda_host_onboarding_details: list(include('sda_host_onboarding_details_type'), required=True, min=0, max=100)
---

sda_host_onboarding_details_type:
  hostname: str(required=False)
  ip_address: str(required=False)
  fabric_site_name_hierarchy: str(required=False)
  port_assignments: list(include('port_assignment_details_type'), required=False, min=0, max=100)
  port_channels: list(include('port_channel_details_type'), required=False, min=0, max=100)
  wireless_ssids: list(include('wireless_ssid_details_type'), required=False, min=0, max=100)

port_assignment_details_type:
  authentication_template_name: enum('No Authentication', 'Open Authentication', 'Closed Authentication', 'Low Impact', required=False)
  connected_device_type: enum('TRUNKING_DEVICE', 'ACCESS_POINT', 'USER_DEVICE', required=True)
  data_vlan_name: str(required=False)
  interface_description: str(required=False)
  interface_name: str(required=True)
  security_group_name: str(required=False)
  voice_vlan_name: str(required=False)

port_channel_details_type:
  connected_device_type: str(required=True)
  interface_names: list(str, required=True, min=0, max=100)
  port_channel_description: str(required=False)
  port_channel_name: str(required=False)
  protocol: enum('ON', 'LACP', 'PAGP', required=False)

wireless_ssid_details_type:
  vlan_name: str(required=True)
  ssid_details: list(include('ssid_details_type'), required=True, min=0, max=100)

ssid_details_type:
  ssid_name: str(required=True)
  security_group_name: str(required=False)

# The Cisco Catalyst Center schema for the SD-Access Host Onboarding playbook.


