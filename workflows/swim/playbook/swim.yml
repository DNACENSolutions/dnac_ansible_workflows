---
- name: Configure device credentials on Cisco DNA Center
  hosts: dnachosts
  connection: local
  gather_facts: no
  vars_files:
    - "{{ VARS_FILES_PATH }}"
  
  vars:
    dnac_login: &dnac_login
      dnac_host: "{{ dnac_host }}"
      dnac_username: "{{ dnac_username }}"
      dnac_password: "{{ dnac_password }}"
      dnac_verify: "{{ dnac_verify }}"
      dnac_port: "{{ dnac_port }}"
      dnac_version: "{{ dnac_version }}"
      dnac_debug: "{{ dnac_debug }}"

  tasks:
    - name: Upload the images to Cisco DNA Center
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - "{{ item }}"
      loop: "{{ image_details }}"
      when: image_details is defined
      register: image_details_result
    - debug:
        msg: "{{ image_details_result }}"

    - name: Golden tag uploaded images
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - "{{ item }}"
      loop: "{{ image_golden_tagging_details }}"
      when: image_golden_tagging_details is defined
      register: image_golden_tagging_details_result
    - debug:
        msg: "{{ image_golden_tagging_details_result }}"

    - name: Set all_network_devices required by the filter 
      set_fact:
        all_network_devices:  "{{ network_devices }}"

    - name: Set filters_object required by the filter for distribution
      set_fact:
        filters_object:  "{{ imageDistributionDetails}}"
    - import_tasks: ../common_tasks/filter_device_serial_numbers_for_role_site.yml

    - name: Distribute image to selected devices
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageDistributionDetails:
            deviceSerialNumber: "{{ item }}"
            imageName: "{{ imageDistributionDetails.imageName }}"
      loop: "{{ filtered_devices_list }}"
      when: imageDistributionDetails is defined
      when: filtered_devices_list is defined
      register: imageDistributionDetails_result

    - name: Distribute image to selected devices if IP address is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageDistributionDetails:
            deviceIPAddress: "{{ imageDistributionDetails.deviceIPAddress }}"
            imageName: "{{ imageDistributionDetails.imageName }}"
      when: imageDistributionDetails is defined and imageDistributionDetails.deviceIPAddress is defined and imageDistributionDetails.deviceIPAddress != none

    - name: Distribute image to selected devices if hostname is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageDistributionDetails:
            deviceHostname: "{{ imageDistributionDetails.deviceHostname }}"
            imageName: "{{ imageDistributionDetails.imageName }}"
      when: imageDistributionDetails is defined and imageDistributionDetails.deviceHostname is defined and imageDistributionDetails.deviceHostname != none

    - name: DIstribute image to selected devices if deviceMacAddress is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageDistributionDetails:
            deviceMacAddress: "{{ imageDistributionDetails.deviceMacAddress }}"
            imageName: "{{ imageDistributionDetails.imageName }}"
      when: imageDistributionDetails is defined and imageDistributionDetails.deviceMacAddress is defined and imageDistributionDetails.deviceMacAddress != none

    - name: DIstribute image to selected devices if deviceSerialNumber is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageDistributionDetails:
            deviceSerialNumber: "{{ imageDistributionDetails.deviceSerialNumber }}"
            imageName: "{{ imageDistributionDetails.imageName }}"
      when: imageDistributionDetails is defined and imageDistributionDetails.deviceSerialNumber is defined and imageDistributionDetails.deviceSerialNumber != none

    - name: Set filters_object required by the filter required for activation
      set_fact:
        filters_object:  "{{ imageActivationDetails}}"
    - import_tasks: ../common_tasks/filter_device_serial_numbers_for_role_site.yml

    - name: Distribute image to selected devices
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageActivationDetails:
            deviceSerialNumber: "{{ item }}"
            imageName: "{{ imageActivationDetails.imageName }}"
            activateLowerImageVersion: "{{ imageActivationDetails.activateLowerImageVersion }}"
            distributeIfNeeded: "{{ imageActivationDetails.distributeIfNeeded }}"
            deviceUpgradeMode: "{{ imageActivationDetails.deviceUpgradeMode }}"
            scheduleValidate: "{{ imageActivationDetails.scheduleValidate }}"
      loop: "{{ filtered_devices_list }}"
      when: imageActivationDetails is defined
      when: filtered_devices_list is defined
      register: imageActivationDetails_result

    - name: Distribute image to selected devices if IP address is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageActivationDetails:
            deviceIPAddress: "{{ imageActivationDetails.deviceIPAddress }}"
            imageName: "{{ imageActivationDetails.imageName }}"
            activateLowerImageVersion: "{{ imageActivationDetails.activateLowerImageVersion }}"
            distributeIfNeeded: "{{ imageActivationDetails.distributeIfNeeded }}"
            deviceUpgradeMode: "{{ imageActivationDetails.deviceUpgradeMode }}"
            scheduleValidate: "{{ imageActivationDetails.scheduleValidate }}"
      when: imageActivationDetails is defined and imageActivationDetails.deviceIPAddress is defined and imageActivationDetails.deviceIPAddress != none

    - name: Distribute image to selected devices if hostname is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageActivationDetails:
            deviceHostname: "{{ imageActivationDetails.deviceHostname }}"
            imageName: "{{ imageActivationDetails.imageName }}"
            activateLowerImageVersion: "{{ imageActivationDetails.activateLowerImageVersion }}"
            distributeIfNeeded: "{{ imageActivationDetails.distributeIfNeeded }}"
            deviceUpgradeMode: "{{ imageActivationDetails.deviceUpgradeMode }}"
            scheduleValidate: "{{ imageActivationDetails.scheduleValidate }}"
      when: imageActivationDetails is defined and imageActivationDetails.deviceHostname is defined and imageActivationDetails.deviceHostname != none

    - name: DIstribute image to selected devices if deviceMacAddress is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageActivationDetails:
            deviceMacAddress: "{{ imageActivationDetails.deviceMacAddress }}"
            imageName: "{{ imageActivationDetails.imageName }}"
            activateLowerImageVersion: "{{ imageActivationDetails.activateLowerImageVersion }}"
            distributeIfNeeded: "{{ imageActivationDetails.distributeIfNeeded }}"
            deviceUpgradeMode: "{{ imageActivationDetails.deviceUpgradeMode }}"
            scheduleValidate: "{{ imageActivationDetails.scheduleValidate }}"
      when: imageActivationDetails is defined and imageActivationDetails.deviceMacAddress is defined and imageActivationDetails.deviceMacAddress != none

    - name: DIstribute image to selected devices if deviceSerialNumber is defined
      cisco.dnac.swim_intent:
        <<: *dnac_login
        config:
        - imageActivationDetails:
            deviceSerialNumber: "{{ imageActivationDetails.deviceSerialNumber }}"
            imageName: "{{ imageActivationDetails.imageName }}"
            activateLowerImageVersion: "{{ imageActivationDetails.activateLowerImageVersion }}"
            distributeIfNeeded: "{{ imageActivationDetails.distributeIfNeeded }}"
            deviceUpgradeMode: "{{ imageActivationDetails.deviceUpgradeMode }}"
            scheduleValidate: "{{ imageActivationDetails.scheduleValidate }}"
      when: imageActivationDetails is defined and imageActivationDetails.deviceSerialNumber is defined and imageActivationDetails.deviceSerialNumber != none
