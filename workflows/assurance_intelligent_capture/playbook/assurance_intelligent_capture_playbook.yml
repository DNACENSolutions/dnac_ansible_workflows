---
- name: Assurance intelligent capture Playbook
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no

  vars_files:
    - "{{ VARS_FILE_PATH }}"
  vars:
    state: merged
    catalyst_center_login: &catalyst_center_login
      dnac_host: "{{ catalyst_center_host | default(dnac_host) }}"
      dnac_username: "{{ catalyst_center_username | default(dnac_username) }}"
      dnac_password: "{{ catalyst_center_password | default(dnac_password) }}"
      dnac_version: "{{ catalyst_center_version  | default(dnac_version) }}"
      dnac_port: "{{ catalyst_center_port | default(443) }}"
      dnac_verify: "{{ catalyst_center_verify | default(dnac_verify) }}"
      config_verify: "{{ catalyst_center_config_verify | default(False) }}"
      dnac_debug: "{{ catalyst_center_debug | default(False) }}"
      dnac_log: "{{ catalyst_center_log | default(False) }}"
      dnac_log_level: "{{ catalyst_center_log_level | default('INFO') }}"
      dnac_log_file_path: "{{ catalyst_center_log_file_path |  default(omit) }}"
      dnac_log_append: "{{ catalyst_center_log_append |  default(False) }}"
      dnac_api_task_timeout: "{{ catalyst_center_api_task_timeout |  default(1200) }}"

  tasks:
    - name: print VARS_FILE_PATH
      debug:
        msg: "Input file selected {{ VARS_FILE_PATH }}"

    - name: Playbook start time for the assurnace intelligent capture playbook
      set_fact:
        long_op_start: "{{ now() }}"

    # load ise_radius_integration_details template jinja file
    - name: Load template file to generate the assurnace intelligent capture playbook
      template: 
        src: "{{ jinjatemplate_file }}"
        dest: ../tmp/template_generated_file.yaml
      when:  jinjatemplate is defined and jinjatemplate is true and jinjatemplate_file is defined
    # Include the variables file ../tmp/template_generated_file.yaml for the playbook
    - name: Include the variables file ../tmp/template_generated_file.yaml for the playbook
      include_vars:
        file: ../tmp/template_generated_file.yaml
      when: jinjatemplate is defined and jinjatemplate is true and jinjatemplate_file is defined
    - name: Configure assurnace intelligent capture playbook from file "{{ VARS_FILE_PATH }}" and state "{{ state }}"
      # Replace with the actual Cisco DNAC module for health score settings
      # Example placeholder module name: cisco.dnac.assurance_health_score_settings
      cisco.dnac.assurance_icap_settings_workflow_manager:
        <<: *catalyst_center_login
        state: "{{ state }}"
        config: "{{ assurance_inteligent_capture_settings }}" # Assuming variable name for health score details
      register: assurance_icap_output
      when: assurance_inteligent_capture_settings is defined

    - name: Print output of the assurance intelligent capture playbook
      debug:
        msg: "{{ assurance_icap_output }}"

    # delete the template file
    - name: Delete the template file
      ansible.builtin.command: rm ../tmp/template_generated_file.yaml
      when:  jinjatemplate is defined and jinjatemplate is true and jinjatemplate_file is defined
    - name: Playbook end time for the assurance intelligent capture playbook
      set_fact:
        long_op_end: "{{ now() }}"

    - name: Print the run time for the assurance intelligent capture playbook
      debug:
        msg: "Assurance Intelligent Capture Playbook run time: {{ long_op_start }}, end: {{ long_op_end }}"

#=========================================================================
# End of Playbook
#=========================================================================