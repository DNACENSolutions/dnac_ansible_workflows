# Parameter	Choices / Defaults	Comments
# config
# list / elements=dictionary / required
# A list containing detailed configurations for creating, updating, or deleting fabric sites/zones in a Software-Defined Access (SDA) environment. It also includes specifications for updating the authentication profile template for these sites. Each element in the list represents a specific operation to be performed on the SDA infrastructure, such as the addition, modification, or removal of fabric sites/zones, and modifications to authentication profiles.

# anycast_gateways
# list / elements=dictionary
# A list of anycast gateways in the SDA fabric, each with details about its associated virtual network, IP pool, VLAN configuration, and other advanced network settings.

# auto_generate_vlan_name
# boolean
# Choices:
# true
# false
# Specifies whether the VLAN name should be auto-generated. If 'is_critical_pool' is set to true, then this field must also be set to true. If 'auto_generate_vlan_name' is set to true, then 'vlan_name' and 'vlan_id' will be autogenerated by Catalyst Center, even if 'vlan_name' or 'vlan_id' is provided in the playbook.

# fabric_enabled_wireless
# boolean
# Choices:
# true
# false  ←
# Specifies whether the anycast gateway is enabled for wireless in the fabric. By default, this field is set to false. This field is not applicable to INFRA_VN.

# fabric_site_locations
# dictionary / required
# A list of fabric site locations where this Layer3 virtual network will be assigned, including details about the site hierarchy and fabric type. If this parameter is provided, ensure that both site_name and fabric_type are specified for each entry. This is required to extend the virtual networks across the specified fabric sites.

# fabric_type
# string
# Default: fabric_site	
# Specifies the type of site to be managed within the SDA environment. The acceptable values are 'fabric_site' and 'fabric_zone'. The default value is 'fabric_site', indicating the configuration of a broader network area, whereas 'fabric_zone' typically refers to a more specific segment within the site.

# site_name_hierarchy
# string
# The hierarchical name of the site where the anycast gateway is deployed.

# group_policy_enforcement_enabled
# boolean
# Choices:
# true
# false  ←
# Indicates whether group policy enforcement is enabled in the fabric. By default, it is set to false.

# intra_subnet_routing_enabled
# boolean
# Choices:
# true
# false  ←
# Specifies whether routing is enabled within the subnet. By default, this field is set to false. This field is not applicable to INFRA_VN. Updating this field is not allowed.

# ip_directed_broadcast
# boolean
# Choices:
# true
# false  ←
# Indicates whether IP directed broadcasts are allowed. By default, it is set to false. This field is not applicable to INFRA_VN.

# ip_pool_name
# string / required
# Name of the IP pool associated with the anycast gateway. The IP pool must already exist in the Cisco Catalyst Center, if it does not exist, it can be created or reserved using the 'network_settings_workflow_manager' module. Updating this field is not allowed.

# is_critical_pool
# boolean
# Choices:
# true
# false  ←
# Specifies whether this pool is marked as critical for the network. If set to true, 'auto_generate_vlan_name' must also be true. By default, this field is set to false. This field is not applicable to INFRA_VN. Updating this field is not allowed.

# layer2_flooding_enabled
# boolean
# Choices:
# true
# false  ←
# Indicates whether Layer 2 flooding is enabled in the network. By default, it is set to false. It is not applicable to INFRA_VN.

# multiple_ip_to_mac_addresses
# boolean
# Choices:
# true
# false  ←
# Indicates whether multiple IPs can be associated with a single MAC address. By default, it is set to false. This field is not applicable to INFRA_VN.

# pool_type
# -
# The pool type of the anycast gateway. This field is required and applicable only to INFRA_VN. One of the following values must be selected (EXTENDED_NODE, FABRIC_AP). Updating this field is not allowed.

# security_group_name
# string
# The name of the security group associated with the anycast gateway. It is not applicable to INFRA_VN.

# supplicant_based_extended_node_onboarding
# boolean
# Choices:
# true
# false  ←
# Specifies whether supplicant-based onboarding for extended nodes is enabled. By default, this field is set to false. This field is applicable only to INFRA_VN requests and must not be null when 'pool_type' is EXTENDED_NODE.

# tcp_mss_adjustment
# integer
# The value used to adjust the TCP Maximum Segment Size (MSS). The value should be in the range (500, 1441).

# traffic_type
# string
# The type of traffic handled by the VLAN (e.g., DATA, VOICE). By defaut, it is set to "DATA". Updating the "traffic_type" in the anycast gateway is not allowed if "is_critical_pool" is set to true.

# vlan_id
# integer
# ID of the VLAN for the anycast gateway. The allowed VLAN range is 2-4093, except for reserved VLANs 1002-1005, 2046, and 4094. If deploying an anycast gateway on a fabric zone, this 'vlan_id' must match the 'vlan_id' of the corresponding anycast gateway on the fabric site. This field is optional if the parameter 'auto_generate_vlan_name' is set to true. Updating this field is not allowed.

# vlan_name
# string
# Name of the VLAN for the anycast gateway. This field is optional if the parameter auto_generate_vlan_name is set to True. Updating this field is not allowed.

# vn_name
# string / required
# The name of the Layer3 virtual network. It must consist only of letters, numbers, and underscores, with a length between 1 and 16 characters. This field cannot be updated after creation.

# fabric_vlan
# list / elements=dictionary
# A list of VLAN configurations for fabric sites in SDA environment. Each VLAN entry includes information about its name, ID, traffic type, and wireless capabilities.

# associated_layer3_virtual_network
# string
# Name of the layer3 virtual network associated with the layer2 fabric VLAN. This field is provided to support requests related to virtual network anchoring. The layer3 virtual network must have already been added to the fabric before association. This field must either be present in all payload elements or none. And updation of this field is not allowed.

# fabric_enabled_wireless
# boolean
# Choices:
# true
# false
# Indicates whether the fabric VLAN is enabled for wireless in the fabric environment. By default, it is set to False.

# fabric_site_locations
# list / elements=dictionary
# A list of fabric site locations where this VLAN is deployed, including site hierarchy and fabric type details.

# fabric_type
# string / required
# Specifies the type of site to be managed within the SDA environment. The acceptable values are 'fabric_site' and 'fabric_zone'. The default value is 'fabric_site', indicating the configuration of a broader network area, whereas 'fabric_zone' typically refers to a more specific segment within the site.

# site_name_hierarchy
# string / required
# This name uniquely identifies the site for operations such as creating/updating/deleting any fabric VLAN. This parameter is required, and updates to this field is not allowed.

# traffic_type
# string / required
# The type of traffic handled by the VLAN (e.g., DATA, VOICE). By default, it is set to "DATA".

# vlan_id
# integer / required
# ID for the layer2 VLAN network. Allowed VLAN range is 2-4093 except for reserved VLANs 1002-1005, and 2046. If deploying on a fabric zone, this vlan_id must match the vlan_id of the corresponding layer2 virtual network on the fabric site. And updation of this field is not allowed.

# vlan_name
# string / required
# Name of the VLAN of the layer2 virtual network. Must contain only alphanumeric characters, underscores, and hyphens. Updating this field is not allowed.

# virtual_networks
# list / elements=dictionary
# A list of virtual networks (VNs) configured within the SDA fabric. Each virtual network includes details such as its name, associated fabric sites, and optionally, an anchored site.

# anchored_site_name
# string
# Specifies the name of the fabric site where the virtual network is anchored. When this parameter is provided, ensure that the 'fabric_site_locations' contains the same 'site_name', and that only one fabric site location is specified. If all parameters are provided, the Layer3 virtual network is created and extended across multiple fabric sites. However, the operation will fail due to conflicting 'anchored_site_name' settings, and the module will return a failure response. For a Virtual Network anchored at a site, at least one Control Plane (CP) and External Border must be present.

# fabric_site_locations
# list / elements=dictionary
# A list of fabric site locations where this this Layer3 virtual network is to be assigned to, including site hierarchy and fabric type details. If this parameter is given make sure to provide the site_name and fabric_type as well as the required parameter to extend the virtual networks across given fabric sites.

# fabric_type
# string
# Default: fabric_site	
# Specifies the type of site to be managed within the SDA environment. The acceptable values are 'fabric_site' and 'fabric_zone'. The default value is 'fabric_site', indicating the configuration of a broader network area, whereas 'fabric_zone' typically refers to a more specific segment within the site.

# site_name_hierarchy
# string
# This name uniquely identifies the site for operations such as creating/updating/deleting any layer3 virtual network.

# vn_name
# string / required
# The virtual network must be added to the site before creating an anycast gateway with it. Updating this field is not allowed. It consist of only letters, numbers, and underscores, and must be between 1-16 characters in length.

# config_verify
# boolean
# Choices:
# true
# false  ←
# Set to True to verify the Cisco Catalyst Center config after applying the playbook config.

# dnac_api_task_timeout
# integer
# Default: 1200	
# Defines the timeout in seconds for API calls to retrieve task details. If the task details are not received within this period, the process will end, and a timeout notification will be logged.

# dnac_debug
# boolean
# Choices:
# true
# false  ←
# Indicates whether debugging is enabled in the Cisco Catalyst Center SDK.

# dnac_host
# string / required
# The hostname of the Cisco Catalyst Center.

# dnac_log
# boolean
# Choices:
# true
# false  ←
# Flag to enable/disable playbook execution logging.

# When true and dnac_log_file_path is provided, - Create the log file at the execution location with the specified name.

# When true and dnac_log_file_path is not provided, - Create the log file at the execution location with the name 'dnac.log'.

# When false, - Logging is disabled.

# If the log file doesn't exist, - It is created in append or write mode based on the "dnac_log_append" flag.

# If the log file exists, - It is overwritten or appended based on the "dnac_log_append" flag.

# dnac_log_append
# boolean
# Choices:
# true  ←
# false
# Determines the mode of the file. Set to True for 'append' mode. Set to False for 'write' mode.

# dnac_log_file_path
# string
# Default: dnac.log	
# Governs logging. Logs are recorded if dnac_log is True.

# If path is not specified, - When 'dnac_log_append' is True, 'dnac.log' is generated in the current Ansible directory; logs are appended. - When 'dnac_log_append' is False, 'dnac.log' is generated; logs are overwritten.

# If path is specified, - When 'dnac_log_append' is True, the file opens in append mode. - When 'dnac_log_append' is False, the file opens in write (w) mode. - In shared file scenarios, without append mode, content is overwritten after each module execution. - For a shared log file, set append to False for the 1st module (to overwrite); for subsequent modules, set append to True.

# dnac_log_level
# string
# Default: WARNING	
# Sets the threshold for log level. Messages with a level equal to or higher than this will be logged. Levels are listed in order of severity [CRITICAL, ERROR, WARNING, INFO, DEBUG].

# CRITICAL indicates serious errors halting the program. Displays only CRITICAL messages.

# ERROR indicates problems preventing a function. Displays ERROR and CRITICAL messages.

# WARNING indicates potential future issues. Displays WARNING, ERROR, CRITICAL messages.

# INFO tracks normal operation. Displays INFO, WARNING, ERROR, CRITICAL messages.

# DEBUG provides detailed diagnostic info. Displays all log messages.

# dnac_password
# string
# The password for authentication at the Cisco Catalyst Center.

# dnac_port
# string
# Default: 443	
# Specifies the port number associated with the Cisco Catalyst Center.

# dnac_task_poll_interval
# integer
# Default: 2	
# Specifies the interval in seconds between successive calls to the API to retrieve task details.

# dnac_username
# string
# Default: admin	
# The username for authentication at the Cisco Catalyst Center.

# aliases: user
# dnac_verify
# boolean
# Choices:
# true  ←
# false
# Flag to enable or disable SSL certificate verification.

# dnac_version
# string
# Default: 2.2.3.3	
# Specifies the version of the Cisco Catalyst Center that the SDK should use.

# sda_fabric_vlan_limit
# integer
# Default: 50	
# Set the limit for creating/updating fabric VLAN(s) via the SDA API, consistent with the GUI constraints. By default it is set to 50 as in the GUI we can only create 50 fabric VLAN(s) at a time.

# state
# string
# Choices:
# merged  ←
# deleted
# The state of Cisco Catalyst Center after module completion.

# validate_response_schema
# boolean
# Choices:
# true  ←
# false
# Flag for Cisco Catalyst Center SDK to enable the validation of request bodies against a JSON schema.

catalyst_center_version: str(required=False)
catalyst_center_verify: bool(required=False)
catalyst_center_api_task_timeout: int(required=False, default=1200)
catalyst_center_debug: bool(required=False, default=False)
catalyst_center_log: bool(required=False, default=False)
catalyst_center_log_append: bool(required=False, default=True)
catalyst_center_log_file_path: str(required=False, default='dnac.log')
catalyst_center_log_level: enum("CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", required=False)
catalyst_center_config_verify: bool(required=False)
catalyst_center_task_poll_interval: int(required=False, default=2)
jinjatemplate: bool(required=False)
jinjatemplate_file: str(required=False)
sda_fabric_virtual_networks_details: list(include('sda_virtual_networks_l2_l3_gateways_type'),min=0,max=1000,required=True)
---
sda_virtual_networks_l2_l3_gateways_type:
  fabric_vlan: list(include('fabric_vlan_type'),min=1,max=100,required=False)
  virtual_networks: list(include('virtual_networks_type'),min=1,max=100,required=False)
  anycast_gateways: list(include('anycast_gateways_type'),min=1,max=100,required=False)

fabric_vlan_type:
  fabric_site_locations: list(include('fabric_site_locations_type_vlan_or_gw'),min=1,max=100,required=True) # same as fabric_site_locations_type_vlan_or_gw
  vlan_id: int(required=True)
  vlan_name: str(required=True)

virtual_networks_type:
  anchored_site_name: str(required=False)
  fabric_site_locations: list(include('fabric_site_locations_type_vn'),min=1,max=100,required=False)
  vn_name: str(required=True)

anycast_gateways_type:
  fabric_site_location: include('fabric_site_locations_type_vlan_or_gw', required=True) # same as fabric_site_locations_type_vlan_or_gw
  ip_pool_name: str(required=True)
  vn_name: str(required=True)

fabric_site_locations_type_vlan_or_gw:
  site_name_hierarchy: str(required=True)
  fabric_type: str(required=False, default="fabric_site")

fabric_site_locations_type_vn:
  site_name_hierarchy: str(required=False)
  fabric_type: str(required=False, default="fabric_site")

