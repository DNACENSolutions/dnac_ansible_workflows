---
- name: Playbook to manage Cisco Catalyst Center Plug and Play, add pnp devices, bulk import, update, claim routing, switching devices and wirelesss controllers. 
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no

  vars_files:
    - "{{ VARS_FILE_PATH }}"
  vars:
    state: merged
    dnac_login: &dnac_login
      dnac_host: "{{ catalyst_center_host | default(dnac_host) }}"
      dnac_username: "{{ catalyst_center_username | default(dnac_username) }}"
      dnac_password: "{{ catalyst_center_password | default(dnac_password) }}"
      dnac_version: "{{ catalyst_center_version  | default(dnac_version) }}"
      dnac_port: "{{ catalyst_center_port | default(443) }}"
      dnac_verify: "{{ catalyst_center_verify | default(dnac_verify) }}"
      config_verify: "{{ catalyst_center_config_verify | default(False) }}"
      dnac_debug: "{{ catalyst_center_debug | default(False) }}"
      dnac_log: "{{ catalyst_center_log | default(False) }}"
      dnac_log_level: "{{ catalyst_center_log_level | default('INFO') }}"
      dnac_log_file_path: "{{ catalyst_center_log_file_path |  default(omit) }}"
      dnac_log_append: "{{ catalyst_center_log_append |  default(False) }}"
  tasks:
    - name: Network Plug and Play devices on Cisco Catalyst Center
      set_fact:
        long_op_start: "{{ now() }}"

    - name: Add pnp devices to Cisco Catalyst Center
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: "{{ state }}"
        config: "{{ pnp_details.add_network_devices }}"
      register: pnp_output
      when: pnp_details.add_network_devices is defined
    - name: Print the Network Plug and Play devices output
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Add pnp bulk devices to Cisco Catalyst Center
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: "{{ state }}"
        config: "{{ pnp_details.add_bulk_network_devices }}"
      register: pnp_output
      when: pnp_details.add_bulk_network_devices
    - name: Print the Network Plug and Play devices output
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Claim Routing devices through PnP
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.claim_router_devices }}"
      register: pnp_output
      when: pnp_details.claim_router_devices is defined
    - name: print the output of the claim_router_devices
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Claim Switching devices through PnP
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.claim_switching_devices }}"
      register: pnp_output
      when: pnp_details.claim_switching_devices is defined
    - name: print the output of the claim_switching_devices
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined
    
    - name: Claim Switching Stack devices through PnP
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.claim_cat9k_switch_stack }}"
      register: pnp_output
      when: pnp_details.claim_cat9k_switch_stack is defined
    - name: print the output of the claim_cat9k_switch_stack
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Claim Wireless Controller EWLC devices through PnP
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.claim_embedded_wireless_controller }}"
      register: pnp_output
      when: pnp_details.claim_embedded_wireless_controller is defined
    - name: print the output of the claim_embedded_wireless_controller
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Reset an error PnP device - EWLC type
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.pnp_ewlc_reset }}"
      register: pnp_output
      when: pnp_details.pnp_ewlc_reset is defined
    - name: print the output of the pnp_ewlc_reset
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Claim Access Point device through PnP
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.claim_access_points }}"
      register: pnp_output
      when: pnp_details.claim_access_points is defined
    - name: print the output of the claim_access_points
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Claim Multiple EWLC device through PnP High Availability (HA)
      cisco.dnac.pnp_workflow_manager:
        <<: *dnac_login
        state: merged
        config:
        - "{{ item }}"
      loop: "{{ pnp_details.claim_multiple_ewlc_ha }}"
      register: pnp_output
      when: pnp_details.claim_multiple_ewlc_ha is defined
    - name: print the output of the claim_multiple_ewlc_ha
      debug:
        msg: "{{pnp_output}}"
      when: pnp_output is defined

    - name: Network Plug and Play devices playbook end time
      set_fact:
        long_op_end: "{{ now() }}"
    - name: Print Network Plug and Play devices playbook execution time
      debug:
        msg: "Network Plug and Play devices playbook run time: {{ long_op_start }}, end: {{ long_op_end }}"
  post_tasks:
    - name: run command module to find python version
      ansible.builtin.command: which python
      register: ansible_play_path
      delegate_to: catalyst_center_hosts
      connection: local
