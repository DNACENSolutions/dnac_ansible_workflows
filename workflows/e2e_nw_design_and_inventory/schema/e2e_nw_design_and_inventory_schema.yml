
#https://github.com/23andMe/Yamale
catalyst_center_version: str(required=False)
catalyst_center_verify: bool(required=False)
catalyst_center_api_task_timeout: int(required=False, default=1200)
catalyst_center_debug: bool(required=False, default=False)
catalyst_center_log: bool(required=False, default=False)
catalyst_center_log_append: bool(required=False, default=True)
catalyst_center_log_file_path: str(required=False, default='dnac.log')
catalyst_center_log_level: enum("CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", required=False)
catalyst_center_config_verify: bool(required=False)
design_sites: list( include('site_type'), min=0, max=6000, required=False)
device_credentials:
  credentials_details: list(include('global_credential_details_type_t', required=False), min=0, max=100)
  credentials_site_assignment: list(include('assign_credentials_to_site_type', required=False), min=0, max=100)
discovery_details:
  cdp: include('cdp_discovery_type', required=False)
  single: include('single_discovery_type', required=False)
  range: include('range_discovery_type', required=False)
  multi_range: include('multi_range_discovery_type', required=False)
inventory_details:
  network_devices: list(include('network_devices_type', min=1, max=10000))

---
site_type:
  site: any(include('area_type'), include('building_type'), include('floor_type'))
  type: str()

area_type:
  area:
    name: str()
    parent_name: str()

building_type:
  building:
    name: str()
    parent_name: str()
    address: str()
    latitude: num()
    longitude: num()
    country: str()

floor_type:
  floor:
    name: str()
    floor_number: int()
    parent_name: str()
    rfModel: str()
    width: num()
    length: num()
    height: num()


assign_credentials_to_site_type:
  assign_credentials_to_site:
    cli_credential: include('site_cli_credential_type', required=False)
    snmp_v3: include('site_snmp_v3_type', required=False)
    snmp_v2c_read: str(required=False)
    snmp_v2c_write: str(required=False)
    https_read: include('site_https_read_type', required=False)
    https_write: include('site_https_write_type', required=False)
    site_name: list(str(), min=1, max=1000)

site_cli_credential_type:
  description: str()
  username: str(exclude=' <>')
  id: str(required=False)

site_snmp_v3_type:
  description: str()
  username: str(exclude=' <>')
  id: str(required=False)

site_https_read_type:
  description: str(required=False)
  username: str(exclude=' <>', required=False)
  id: str(required=False)

site_https_write_type:
  description: str(required=False)
  username: str(exclude=' <>', required=False)
  id: str(required=False)

cdp_discovery_type: list(include('cdp_discovery_type_type', min=1, max=100), required=False)
cdp_discovery_type_type:
    ip_address_list: list(str(), min=1, max=100)
    devices_list: list(str())
    discovery_type: enum('CDP')
    protocol_order: enum('ssh', 'telnet')
    discovery_name: str()
    discovery_specific_credentials: include('discovery_specific_credentials_type', required=False)
    global_credentials: include('global_credential_details_type', required=False)
    enable_password_list: list(str(),required=False)
    retry: int()

single_discovery_type: list(include('single_discovery_type_type', min=1, max=100), required=False)
single_discovery_type_type:
    ip_address_list: list(str(), min=1, max=100)
    devices_list: list(str())
    discovery_type: enum('SINGLE')
    protocol_order: enum('ssh', 'telnet')
    discovery_name: str()
    discovery_specific_credentials: include('discovery_specific_credentials_type', required=False)
    global_credentials: include('global_credential_details_type', required=False)
    net_conf_port: int()
    enable_password_list: list(str(),required=False)
    retry: int()

range_discovery_type: list(include('range_discovery_type_type', min=1, max=100), required=False)
range_discovery_type_type:
    ip_address_list: list(str(), min=1, max=100)
    discovery_type: enum('RANGE')
    protocol_order: enum('ssh', 'telnet')
    discovery_name: str()
    discovery_specific_credentials: include('discovery_specific_credentials_type', required=False)
    global_credentials: include('global_credential_details_type', required=False)
    net_conf_port: int()
    enable_password_list: list(str(),required=False)
    retry: int()

multi_range_discovery_type: list(include('multi_range_discovery_type_type', min=1, max=100), required=False)
multi_range_discovery_type_type:
    ip_address_list: list(str(), min=1, max=100)
    discovery_type: enum('MULTI RANGE')
    protocol_order: enum('ssh', 'telnet')
    discovery_name: str()
    discovery_specific_credentials: include('discovery_specific_credentials_type', required=False)
    global_credentials: include('global_credential_details_type', required=False)
    net_conf_port: int()
    timeout: int(required=False)
    enable_password_list: list(str(),required=False)
    retry: int()

discovery_specific_credentials_type:
    cli_credentials_list: list(include('cli_credential_type', min=1, max=100, required=False), required=False)
    http_read_credential: include('https_read_type', required=False)
    http_write_credential: include('https_write_type', required=False)
    snmp_v3_credential: include('snmp_v3_type', required=False)
    snmp_v2_read_credential: include('snmp_v2c_read_type', required=False)
    snmp_v2_write_credential: include('snmp_v2c_write_type', required=False)
    net_conf_port: int(required=False)

cli_credential_type:
    description: str(required=False)
    username: str()
    password: str()
    enable_password: str()
snmp_v3_type:
    description: str(required=False)
    auth_password: str()
    auth_type: enum('SHA', 'MD5')
    snmp_mode: enum('AUTHPRIV', 'AUTHNOPRIV', 'NOAUTHNOPRIV')
    privacy_password: str()
    privacy_type: enum('AES128', 'AES192', 'AES256', required=False)
    username: str()
https_read_type:
    description: str(required=False)
    username: str()
    password: str()
    port: int(required=False)
    secure: bool(required=False)
https_write_type:
    description: str(required=False)
    username: str()
    password: str()
    port: int(required=False)
    secure: bool(required=False)
snmp_v2c_write_type:
    description: str(required=False)
    community: str(required=False)
snmp_v2c_read_type:
    description: str(required=False)
    community: str(required=False)

global_credential_details_type_t:
  global_credential_details:
    cli_credential: list(include('cli_credential_type', required=False), min=0, max=100, required=False)
    snmp_v3: list(include('snmp_v3_type', required=False), min=0, max=100,  required=False)
    snmp_v2c_read: list(include('snmp_v2c_read_type', required=False), min=0, max=100, required=False)
    snmp_v2c_write: list(include('snmp_v2c_write_type', required=False), min=0, max=100, required=False)
    https_read: list(include('https_read_type', required=False), min=0, max=100,  required=False)
    https_write: list(include('https_write_type', required=False), min=0, max=100, required=False)

global_credential_details_type:
    cli_credentials_list: list(include('gl_cli_credential_type', required=False), min=0, max=100, required=False)
    snmp_v3_credential_list: list(include('gl_snmp_v3_type', required=False), min=0, max=100, required=False)
    snmp_v2_read_credential_list: list(include('gl_snmp_v2c_read_type', required=False), min=0, max=100, required=False)
    snmp_v2_write_credential_list: list(include('gl_snmp_v2c_write_type', required=False), min=0, max=100, required=False)
    http_read_credential_list: list(include('gl_https_read_type', required=False), min=0, max=100, required=False)
    http_write_credential_list: list(include('gl_https_write_type', required=False), min=0, max=100, required=False)
    net_conf_port_list: list(include('gl_conf_port_list_type', required=False), min=0, max=100, required=False)

gl_cli_credential_type:
    description: str()
    username: str()
gl_snmp_v3_type:
    description: str()
    username: str()
gl_https_read_type:
    description: str()
    username: str()
gl_https_write_type:
    description: str()
    username: str()
gl_snmp_v2c_write_type:
    description: str()
    community: str()
gl_snmp_v2c_read_type:
    description: str()
    community: str()
gl_conf_port_list_type:
    #This should be only intenger port list not description
    description: int()

global_credential_type:
  global_credentials:
    cli_credentials_list: list(include('cli_credential_type', required=False), min=0, max=100, required=False)
    http_read_credential_list: list(include('https_read_type', required=False), min=0, max=100, required=False)
    http_write_credential_list: list(include('https_write_type', required=False), min=0, max=100, required=False)
    snmp_v3_credential_list: list(include('snmp_v3_type', required=False), min=0, max=100, required=False)

#Schema definition for network devices
network_devices_type: include('network_devices_type_type', required=False)

network_devices_type_type:
  add_user_defined_field: list(include('add_user_defined_field_type'), required=False, min=0, max=256)
  clean_config: bool(required=False)
  cli_transport: enum('ssh', 'telnet', required=False)
  compute_device: bool(required=False)
  credential_update: bool(required=False)
  device_resync: bool(required=False)
  enable_password: str(required=False)
  export_device_list: include('export_device_list_type', required=False)
  extended_discovery_info: str(required=False)
  force_sync: bool(required=False)
  hostname_list: list(str(), required=False)
  http_password: str(required=False)
  http_port: int(required=False)
  http_secure: bool(required=False)
  http_username: str(required=False)
  ip_address_list: list(str(), required=True)
  mac_address_list: list(str(), required=False)
  netconf_port: int(required=False)
  password: str(required=False)
  resync_interval: int(required=False)
  resync_retry_count: int(required=False)
  provision_wired_device: list(include('provision_wired_device_type', min=1, max=1000, required=False), required=False)
  reboot_device: bool(required=False)
  role: enum('ACCESS', 'CORE', 'DISTRIBUTION', 'BORDER ROUTER', 'UNKNOWN', required=False)
  serial_number_list: list(str(), required=False)
  snmp_auth_passphrase: str(required=False)
  snmp_auth_protocol: enum('SHA', required=False)
  snmp_mode: enum('NOAUTHNOPRIV', 'AUTHNOPRIV', 'AUTHPRIV', required=False)
  snmp_priv_passphrase: str(required=False)
  snmp_priv_protocol: enum('AES256', 'AES128', required=False)
  snmp_retry: int(required=False)
  snmp_ro_community: str(required=False)
  snmp_rw_community: str(required=False)
  snmp_timeout: int(required=False)
  snmp_username: str(required=False)
  snmp_version: str(required=False)
  type: enum('NETWORK_DEVICE', 'COMPUTE_DEVICE', 'MERAKI_DASHBOARD', 'FIREPOWER_MANAGEMENT_SYSTEM', 'THIRD_PARTY_DEVICE', required=False)
  update_interface_details: include('update_interface_details_type', required=False)
  update_mgmt_ipaddresslist: list(include('update_mgmt_ipaddresslist_type', min=1, max=1000, required=False), required=False)
  username: str(required=False)
  dnac_api_task_timeout: int(required=False)
  dnac_task_poll_interval: int(required=False)
  validate_response_schema: bool(required=False)

add_user_defined_field_type:
  description: str(required=False)
  name: str(required=True)
  value: str(required=False)

export_device_list_type:
  operation_enum: enum('CREDENTIALDETAILS', 'DEVICEDETAILS', required=True)
  parameters: list(str(), required=True)
  password: str(required=True)

provision_wired_device_type:
  device_ip: str(required=True)
  resync_retry_count: int(required=False)
  resync_retry_interval: int(required=False)
  site_name: str(required=True)

update_interface_details_type:
  admin_status: enum('UP', 'DOWN', required=False)
  clear_mac_address_table: bool(required=False)
  deployment_mode: enum('Preview', 'Deploy', required=True)
  description: str(required=True)
  interface_name: list(str(), required=True)
  vlan_id: int(required=False)
  voice_vlan_id: int(required=False)

update_mgmt_ipaddresslist_type:
  exist_mgmt_ipaddress: str(required=True)
  new_mgmt_ipaddress: str(required=True)
